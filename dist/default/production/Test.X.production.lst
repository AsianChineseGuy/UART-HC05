

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 29 13:38:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataCOMMON
   211  009D                     __pidataCOMMON:
   212                           
   213                           ;initializer for _data
   214  009D  3454               	retlw	84
   215  001A                     _RCREG	set	26
   216  0019                     _TXREG	set	25
   217  000B                     _INTCONbits	set	11
   218  0018                     _RCSTAbits	set	24
   219  00C4                     _CREN	set	196
   220  00C1                     _OERR	set	193
   221  00C2                     _FERR	set	194
   222  0040                     _RD0	set	64
   223  0041                     _RD1	set	65
   224  0042                     _RD2	set	66
   225  0043                     _RD3	set	67
   226  008F                     _OSCCONbits	set	143
   227  0088                     _TRISDbits	set	136
   228  008C                     _PIE1bits	set	140
   229  0099                     _SPBRG	set	153
   230  009A                     _SPBRGH	set	154
   231  0098                     _TXSTAbits	set	152
   232  0187                     _BAUDCTLbits	set	391
   233                           
   234                           	psect	cinit
   235  000F                     start_initialization:	
   236                           ; #config settings
   237                           
   238  000F                     __initialization:
   239                           
   240                           ; Initialize objects allocated to COMMON
   241  000F  120A  118A  209D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   242  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   243                           
   244                           ; Clear objects allocated to COMMON
   245  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   246  0016                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  0016                     __end_of__initialization:
   250  0016  0183               	clrf	3
   251  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMMON
   254  0077                     __pbssCOMMON:
   255  0077                     _ferr:
   256  0077                     	ds	1
   257                           
   258                           	psect	dataCOMMON
   259  0078                     __pdataCOMMON:
   260  0078                     _data:
   261  0078                     	ds	1
   262                           
   263                           	psect	cstackCOMMON
   264  0070                     __pcstackCOMMON:
   265  0070                     ?_USART_Init:
   266  0070                     ?_UART_WRITE:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ??_UART_WRITE:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_registers:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_LED_set_off:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_isr:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ?_main:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     UART_WRITE@send:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 1 bytes @ 0x0
   289  0070                     	ds	1
   290  0071                     ??_isr:
   291                           
   292                           ; 1 bytes @ 0x1
   293  0071                     	ds	3
   294  0074                     ??_USART_Init:
   295  0074                     ??_registers:	
   296                           ; 1 bytes @ 0x4
   297                           
   298  0074                     ??_LED_set_off:	
   299                           ; 1 bytes @ 0x4
   300                           
   301  0074                     ??_main:	
   302                           ; 1 bytes @ 0x4
   303                           
   304                           
   305                           ; 1 bytes @ 0x4
   306  0074                     	ds	3
   307                           
   308                           	psect	maintext
   309  001A                     __pmaintext:	
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 62 in file "newmain.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0, pclath, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : B00/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   329 ;;      Params:         0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0
   331 ;;      Temps:          3       0       0       0       0
   332 ;;      Totals:         3       0       0       0       0
   333 ;;Total ram usage:        3 bytes
   334 ;; Hardware stack levels required when called: 3
   335 ;; This function calls:
   336 ;;		_LED_set_off
   337 ;;		_USART_Init
   338 ;;		_registers
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           
   345                           ;psect for function _main
   346  001A                     _main:
   347  001A                     l705:	
   348                           ;incstack = 0
   349                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   350                           
   351                           
   352                           ;newmain.c: 63:     OSCCONbits.SCS = 0;
   353  001A  1683               	bsf	3,5	;RP0=1, select bank1
   354  001B  1303               	bcf	3,6	;RP1=0, select bank1
   355  001C  100F               	bcf	15,0	;volatile
   356                           
   357                           ;newmain.c: 64:     OSCCONbits.OSTS = 1;
   358  001D  158F               	bsf	15,3	;volatile
   359  001E                     l707:
   360                           
   361                           ;newmain.c: 66:     registers();
   362  001E  120A  118A  208F  120A  118A  	fcall	_registers
   363                           
   364                           ;newmain.c: 67:     LED_set_off();
   365  0023  120A  118A  2096  120A  118A  	fcall	_LED_set_off
   366  0028                     l709:
   367                           
   368                           ;newmain.c: 68:     USART_Init();
   369  0028  120A  118A  2068  120A  118A  	fcall	_USART_Init
   370                           
   371                           ;newmain.c: 69:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   372  002D  301A               	movlw	26
   373  002E  00F6               	movwf	??_main+2
   374  002F  305E               	movlw	94
   375  0030  00F5               	movwf	??_main+1
   376  0031  306E               	movlw	110
   377  0032  00F4               	movwf	??_main
   378  0033                     u47:
   379  0033  0BF4               	decfsz	??_main,f
   380  0034  2833               	goto	u47
   381  0035  0BF5               	decfsz	??_main+1,f
   382  0036  2833               	goto	u47
   383  0037  0BF6               	decfsz	??_main+2,f
   384  0038  2833               	goto	u47
   385  0039  0000               	nop
   386  003A                     l711:
   387                           
   388                           ;newmain.c: 70:     RD3=1;
   389  003A  1283               	bcf	3,5	;RP0=0, select bank0
   390  003B  1303               	bcf	3,6	;RP1=0, select bank0
   391  003C  1588               	bsf	8,3	;volatile
   392  003D                     l72:	
   393                           ;newmain.c: 72:     while(1) {
   394                           
   395  003D                     l73:	
   396                           ;newmain.c: 90:     }
   397                           
   398  003D  283D               	goto	l72
   399  003E  120A  118A  280C   	ljmp	start
   400  0041                     __end_of_main:
   401                           
   402                           	psect	text1
   403  008F                     __ptext1:	
   404 ;; *************** function _registers *****************
   405 ;; Defined at:
   406 ;;		line 80 in file "./pins.h"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		None
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; Hardware stack levels required when called: 2
   427 ;; This function calls:
   428 ;;		Nothing
   429 ;; This function is called by:
   430 ;;		_main
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _registers
   436  008F                     _registers:
   437  008F                     l681:	
   438                           ;incstack = 0
   439                           ; Regs used in _registers: []
   440                           
   441                           
   442                           ;./pins.h: 81:     TRISDbits.TRISD3 = 0;
   443  008F  1683               	bsf	3,5	;RP0=1, select bank1
   444  0090  1303               	bcf	3,6	;RP1=0, select bank1
   445  0091  1188               	bcf	8,3	;volatile
   446                           
   447                           ;./pins.h: 82:     TRISDbits.TRISD2 = 0;
   448  0092  1108               	bcf	8,2	;volatile
   449                           
   450                           ;./pins.h: 83:     TRISDbits.TRISD1 = 0;
   451  0093  1088               	bcf	8,1	;volatile
   452                           
   453                           ;./pins.h: 84:     TRISDbits.TRISD0 = 0;
   454  0094  1008               	bcf	8,0	;volatile
   455  0095                     l53:
   456  0095  0008               	return
   457  0096                     __end_of_registers:
   458                           
   459                           	psect	text2
   460  0068                     __ptext2:	
   461 ;; *************** function _USART_Init *****************
   462 ;; Defined at:
   463 ;;		line 52 in file "./bluetooth.h"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; Hardware stack levels required when called: 2
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _USART_Init
   493  0068                     _USART_Init:
   494  0068                     l667:	
   495                           ;incstack = 0
   496                           ; Regs used in _USART_Init: [wreg+status,2]
   497                           
   498                           
   499                           ;./bluetooth.h: 53:     TXSTAbits.SYNC = 0;
   500  0068  1683               	bsf	3,5	;RP0=1, select bank1
   501  0069  1303               	bcf	3,6	;RP1=0, select bank1
   502  006A  1218               	bcf	24,4	;volatile
   503                           
   504                           ;./bluetooth.h: 54:     RCSTAbits.SPEN = 1;
   505  006B  1283               	bcf	3,5	;RP0=0, select bank0
   506  006C  1303               	bcf	3,6	;RP1=0, select bank0
   507  006D  1798               	bsf	24,7	;volatile
   508                           
   509                           ;./bluetooth.h: 55:     TXSTAbits.TXEN = 1;
   510  006E  1683               	bsf	3,5	;RP0=1, select bank1
   511  006F  1303               	bcf	3,6	;RP1=0, select bank1
   512  0070  1698               	bsf	24,5	;volatile
   513                           
   514                           ;./bluetooth.h: 56:     RCSTAbits.CREN = 1;
   515  0071  1283               	bcf	3,5	;RP0=0, select bank0
   516  0072  1303               	bcf	3,6	;RP1=0, select bank0
   517  0073  1618               	bsf	24,4	;volatile
   518                           
   519                           ;./bluetooth.h: 58:     TXSTAbits.BRGH = 1;
   520  0074  1683               	bsf	3,5	;RP0=1, select bank1
   521  0075  1303               	bcf	3,6	;RP1=0, select bank1
   522  0076  1518               	bsf	24,2	;volatile
   523                           
   524                           ;./bluetooth.h: 59:     BAUDCTLbits.BRG16 = 0;
   525  0077  1683               	bsf	3,5	;RP0=1, select bank3
   526  0078  1703               	bsf	3,6	;RP1=1, select bank3
   527  0079  1187               	bcf	7,3	;volatile
   528  007A                     l669:
   529                           
   530                           ;./bluetooth.h: 65:     SPBRGH = 0;
   531  007A  1683               	bsf	3,5	;RP0=1, select bank1
   532  007B  1303               	bcf	3,6	;RP1=0, select bank1
   533  007C  019A               	clrf	26	;volatile
   534  007D                     l671:
   535                           
   536                           ;./bluetooth.h: 66:     SPBRG = 129;
   537  007D  3081               	movlw	129
   538  007E  0099               	movwf	25	;volatile
   539  007F                     l673:
   540                           
   541                           ;./bluetooth.h: 72:     PIE1bits.RCIE = 1;
   542  007F  168C               	bsf	12,5	;volatile
   543  0080                     l675:
   544                           
   545                           ;./bluetooth.h: 73:     INTCONbits.PEIE = 1;
   546  0080  170B               	bsf	11,6	;volatile
   547  0081                     l677:
   548                           
   549                           ;./bluetooth.h: 74:     INTCONbits.GIE = 1;
   550  0081  178B               	bsf	11,7	;volatile
   551  0082                     l41:
   552  0082  0008               	return
   553  0083                     __end_of_USART_Init:
   554                           
   555                           	psect	text3
   556  0096                     __ptext3:	
   557 ;; *************** function _LED_set_off *****************
   558 ;; Defined at:
   559 ;;		line 88 in file "./pins.h"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		None
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         0       0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 2
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           
   588                           ;psect for function _LED_set_off
   589  0096                     _LED_set_off:
   590  0096                     l683:	
   591                           ;incstack = 0
   592                           ; Regs used in _LED_set_off: []
   593                           
   594                           
   595                           ;./pins.h: 89:     RD3 = RD2 = RD1 = RD0 = 0;
   596  0096  1283               	bcf	3,5	;RP0=0, select bank0
   597  0097  1303               	bcf	3,6	;RP1=0, select bank0
   598  0098  1008               	bcf	8,0	;volatile
   599  0099  1088               	bcf	8,1	;volatile
   600  009A  1108               	bcf	8,2	;volatile
   601  009B  1188               	bcf	8,3	;volatile
   602  009C                     l56:
   603  009C  0008               	return
   604  009D                     __end_of_LED_set_off:
   605                           
   606                           	psect	text4
   607  0041                     __ptext4:	
   608 ;; *************** function _isr *****************
   609 ;; Defined at:
   610 ;;		line 41 in file "newmain.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0, pclath, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0
   626 ;;      Temps:          3       0       0       0       0
   627 ;;      Totals:         3       0       0       0       0
   628 ;;Total ram usage:        3 bytes
   629 ;; Hardware stack levels used: 1
   630 ;; Hardware stack levels required when called: 1
   631 ;; This function calls:
   632 ;;		_UART_WRITE
   633 ;; This function is called by:
   634 ;;		Interrupt level 1
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _isr
   640  0041                     _isr:
   641  0041                     i1l691:
   642                           
   643                           ;newmain.c: 46:     ferr = FERR;
   644  0041  3000               	movlw	0
   645  0042  1283               	bcf	3,5	;RP0=0, select bank0
   646  0043  1303               	bcf	3,6	;RP1=0, select bank0
   647  0044  1918               	btfsc	24,2	;volatile
   648  0045  3001               	movlw	1
   649  0046  00F7               	movwf	_ferr
   650  0047                     i1l693:
   651                           
   652                           ;newmain.c: 47:     if(OERR) {
   653  0047  1C98               	btfss	24,1	;volatile
   654  0048  284A               	goto	u2_21
   655  0049  284B               	goto	u2_20
   656  004A                     u2_21:
   657  004A  284D               	goto	i1l697
   658  004B                     u2_20:
   659  004B                     i1l695:
   660                           
   661                           ;newmain.c: 48:         CREN = 0;
   662  004B  1218               	bcf	24,4	;volatile
   663                           
   664                           ;newmain.c: 49:         CREN = 1;
   665  004C  1618               	bsf	24,4	;volatile
   666  004D                     i1l697:
   667                           
   668                           ;newmain.c: 51:     data = RCREG;
   669  004D  081A               	movf	26,w	;volatile
   670  004E  00F1               	movwf	??_isr
   671  004F  0871               	movf	??_isr,w
   672  0050  00F8               	movwf	_data
   673  0051                     i1l699:
   674                           
   675                           ;newmain.c: 52:     UART_WRITE(data);
   676  0051  0878               	movf	_data,w
   677  0052  120A  118A  2083  120A  118A  	fcall	_UART_WRITE
   678  0057                     i1l701:
   679                           
   680                           ;newmain.c: 57:     if (data == 'A') {
   681  0057  3041               	movlw	65
   682  0058  0678               	xorwf	_data,w
   683  0059  1D03               	btfss	3,2
   684  005A  285C               	goto	u3_21
   685  005B  285D               	goto	u3_20
   686  005C                     u3_21:
   687  005C  2861               	goto	i1l67
   688  005D                     u3_20:
   689  005D                     i1l703:
   690                           
   691                           ;newmain.c: 58:         RD0 = !RD0;
   692  005D  3001               	movlw	1
   693  005E  1283               	bcf	3,5	;RP0=0, select bank0
   694  005F  1303               	bcf	3,6	;RP1=0, select bank0
   695  0060  0688               	xorwf	8,f
   696  0061                     i1l67:
   697  0061  0873               	movf	??_isr+2,w
   698  0062  008A               	movwf	10
   699  0063  0E72               	swapf	??_isr+1,w
   700  0064  0083               	movwf	3
   701  0065  0EFE               	swapf	btemp,f
   702  0066  0E7E               	swapf	btemp,w
   703  0067  0009               	retfie
   704  0068                     __end_of_isr:
   705                           
   706                           	psect	intentry
   707  0004                     __pintentry:	
   708                           ;incstack = 0
   709                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   710                           
   711  0004                     interrupt_function:
   712  007E                     saved_w	set	btemp
   713  0004  00FE               	movwf	btemp
   714  0005  0E03               	swapf	3,w
   715  0006  00F2               	movwf	??_isr+1
   716  0007  080A               	movf	10,w
   717  0008  00F3               	movwf	??_isr+2
   718  0009  120A  118A  2841   	ljmp	_isr
   719                           
   720                           	psect	text5
   721  0083                     __ptext5:	
   722 ;; *************** function _UART_WRITE *****************
   723 ;; Defined at:
   724 ;;		line 78 in file "./bluetooth.h"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  send            1    wreg     unsigned char 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  send            1    0[COMMON] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         0       0       0       0       0
   739 ;;      Locals:         1       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0
   741 ;;      Totals:         1       0       0       0       0
   742 ;;Total ram usage:        1 bytes
   743 ;; Hardware stack levels used: 1
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_isr
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           
   752                           ;psect for function _UART_WRITE
   753  0083                     _UART_WRITE:
   754                           
   755                           ;incstack = 0
   756                           ; Regs used in _UART_WRITE: [wreg]
   757                           ;UART_WRITE@send stored from wreg
   758  0083  00F0               	movwf	UART_WRITE@send
   759  0084                     i1l679:
   760                           
   761                           ;./bluetooth.h: 79:     TXREG = send;
   762  0084  0870               	movf	UART_WRITE@send,w
   763  0085  1283               	bcf	3,5	;RP0=0, select bank0
   764  0086  1303               	bcf	3,6	;RP1=0, select bank0
   765  0087  0099               	movwf	25	;volatile
   766  0088                     i1l44:	
   767                           ;./bluetooth.h: 80:     while(!TXSTAbits.TRMT);
   768                           
   769  0088  1683               	bsf	3,5	;RP0=1, select bank1
   770  0089  1303               	bcf	3,6	;RP1=0, select bank1
   771  008A  1C98               	btfss	24,1	;volatile
   772  008B  288D               	goto	u1_21
   773  008C  288E               	goto	u1_20
   774  008D                     u1_21:
   775  008D  2888               	goto	i1l44
   776  008E                     u1_20:
   777  008E                     i1l47:
   778  008E  0008               	return
   779  008F                     __end_of_UART_WRITE:
   780  007E                     btemp	set	126	;btemp
   781  007E                     wtemp0	set	126
   782                           
   783                           	psect	config
   784                           
   785                           ;Config register CONFIG1 @ 0x2007
   786                           ;	Oscillator Selection bits
   787                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   788                           ;	Watchdog Timer Enable bit
   789                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   790                           ;	Power-up Timer Enable bit
   791                           ;	PWRTE = OFF, PWRT disabled
   792                           ;	RE3/MCLR pin function select bit
   793                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   794                           ;	Code Protection bit
   795                           ;	CP = OFF, Program memory code protection is disabled
   796                           ;	Data Code Protection bit
   797                           ;	CPD = OFF, Data memory code protection is disabled
   798                           ;	Brown Out Reset Selection bits
   799                           ;	BOREN = OFF, BOR disabled
   800                           ;	Internal External Switchover bit
   801                           ;	IESO = ON, Internal/External Switchover mode is enabled
   802                           ;	Fail-Safe Clock Monitor Enabled bit
   803                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   804                           ;	Low Voltage Programming Enable bit
   805                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   806                           ;	In-Circuit Debugger Mode bit
   807                           ;	DEBUG = 0x1, unprogrammed default
   808  2007                     	org	8199
   809  2007  2CF2               	dw	11506
   810                           
   811                           ;Config register CONFIG2 @ 0x2008
   812                           ;	Brown-out Reset Selection bit
   813                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   814                           ;	Flash Program Memory Self Write Enable bits
   815                           ;	WRT = OFF, Write protection off
   816  2008                     	org	8200
   817  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_UART_WRITE

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              4 COMMON     3     3      0
                        _LED_set_off
                         _USART_Init
                          _registers
 ---------------------------------------------------------------------------------
 (1) _registers                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_set_off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                         _UART_WRITE
 ---------------------------------------------------------------------------------
 (3) _UART_WRITE                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_set_off
   _USART_Init
   _registers

 _isr (ROOT)
   _UART_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       9      12        0.0%
ABS                  0      0       9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 29 13:38:23 2021

                     l41 0082                       l53 0095                       l56 009C  
                     l72 003D                       l73 003D                       u47 0033  
                    l711 003A                      l705 001A                      l707 001E  
                    l709 0028                      l671 007D                      l673 007F  
                    l681 008F                      l683 0096                      l675 0080  
                    l667 0068                      l677 0081                      l669 007A  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _isr 0041                     ?_isr 0070  
                   _CREN 00C4                     _FERR 00C2                     i1l44 0088  
                   i1l47 008E                     i1l67 0061                     _OERR 00C1  
                   u1_20 008E                     u1_21 008D                     u2_20 004B  
                   u2_21 004A                     u3_20 005D                     u3_21 005C  
                   _data 0078                     _ferr 0077                     _main 001A  
                   btemp 007E                     start 000C             ?_LED_set_off 0070  
                  ??_isr 0071                    ?_main 0070                    i1l701 0057  
                  i1l703 005D                    i1l691 0041                    i1l693 0047  
                  i1l679 0084                    i1l695 004B                    i1l697 004D  
                  i1l699 0051                    _RCREG 001A              ?_UART_WRITE 0070  
                  _SPBRG 0099                    _TXREG 0019                    pclath 000A  
                  status 0003                    wtemp0 007E              ?_USART_Init 0070  
        __initialization 000F             __end_of_main 0041                   ??_main 0074  
                 _SPBRGH 009A      __size_of_UART_WRITE 000C             __pdataCOMMON 0078  
                 saved_w 007E      __size_of_USART_Init 001B           UART_WRITE@send 0070  
__end_of__initialization 0016           __pcstackCOMMON 0070     __size_of_LED_set_off 0007  
             __pmaintext 001A               __pintentry 0004       __size_of_registers 0007  
           ??_UART_WRITE 0070             ??_USART_Init 0074       __end_of_UART_WRITE 008F  
                __ptext1 008F                  __ptext2 0068                  __ptext3 0096  
                __ptext4 0041                  __ptext5 0083             __size_of_isr 0027  
     __end_of_USART_Init 0083     end_of_initialization 0016        __end_of_registers 0096  
              _RCSTAbits 0018                _TRISDbits 0088                _TXSTAbits 0098  
          __pidataCOMMON 009D              _BAUDCTLbits 0187      start_initialization 000F  
            __end_of_isr 0068            ??_LED_set_off 0074              __pbssCOMMON 0077  
              ___latbits 0002      __end_of_LED_set_off 009D        interrupt_function 0004  
              _registers 008F                 _PIE1bits 008C               ?_registers 0070  
            _LED_set_off 0096            __size_of_main 0027               _INTCONbits 000B  
               intlevel1 0000              ??_registers 0074               _OSCCONbits 008F  
             _UART_WRITE 0083               _USART_Init 0068  
