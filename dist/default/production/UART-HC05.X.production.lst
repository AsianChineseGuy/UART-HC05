

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 03 03:52:46 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataCOMMON
   213  00FA                     __pidataCOMMON:
   214                           
   215                           ;initializer for _data
   216  00FA  3454               	retlw	84
   217  0001                     _TMR0	set	1
   218  001A                     _RCREG	set	26
   219  0019                     _TXREG	set	25
   220  000B                     _INTCONbits	set	11
   221  0018                     _RCSTAbits	set	24
   222  005A                     _T0IF	set	90
   223  00C1                     _OERR	set	193
   224  00C2                     _FERR	set	194
   225  0065                     _RCIF	set	101
   226  0040                     _RD0	set	64
   227  0041                     _RD1	set	65
   228  0042                     _RD2	set	66
   229  0043                     _RD3	set	67
   230  008F                     _OSCCONbits	set	143
   231  0081                     _OPTION_REGbits	set	129
   232  0088                     _TRISDbits	set	136
   233  008C                     _PIE1bits	set	140
   234  0099                     _SPBRG	set	153
   235  009A                     _SPBRGH	set	154
   236  0098                     _TXSTAbits	set	152
   237  0187                     _BAUDCTLbits	set	391
   238                           
   239                           	psect	cinit
   240  0011                     start_initialization:	
   241                           ; #config settings
   242                           
   243  0011                     __initialization:
   244                           
   245                           ; Initialize objects allocated to COMMON
   246  0011  120A  118A  20FA  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   247  0016  00FA               	movwf	__pdataCOMMON& (0+127)
   248                           
   249                           ; Clear objects allocated to COMMON
   250  0017  01F6               	clrf	__pbssCOMMON& (0+127)
   251  0018  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   252  0019  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   253  001A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   254  001B                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  001B                     __end_of__initialization:
   258  001B  0183               	clrf	3
   259  001C  120A  118A  2883   	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMMON
   262  0076                     __pbssCOMMON:
   263  0076                     _ms:
   264  0076                     	ds	2
   265  0078                     _count:
   266  0078                     	ds	1
   267  0079                     _ferr:
   268  0079                     	ds	1
   269                           
   270                           	psect	dataCOMMON
   271  007A                     __pdataCOMMON:
   272  007A                     _data:
   273  007A                     	ds	1
   274                           
   275                           	psect	cstackCOMMON
   276  0070                     __pcstackCOMMON:
   277  0070                     ?_USART_Init:
   278  0070                     ?_UART_WRITE:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ??_UART_WRITE:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_UART_GET:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ??_UART_GET:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_registers:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_LED_set_off:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_isr:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_main:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     UART_WRITE@send:	
   303                           ; 1 bytes @ 0x0
   304                           
   305                           
   306                           ; 1 bytes @ 0x0
   307  0070                     	ds	1
   308  0071                     UART_GET@value:
   309                           
   310                           ; 1 bytes @ 0x1
   311  0071                     	ds	1
   312  0072                     ??_isr:
   313                           
   314                           ; 1 bytes @ 0x2
   315  0072                     	ds	4
   316                           
   317                           	psect	cstackBANK0
   318  0020                     __pcstackBANK0:
   319  0020                     ??_USART_Init:
   320  0020                     ??_registers:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0020                     ??_LED_set_off:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0020                     ??_main:	
   327                           ; 1 bytes @ 0x0
   328                           
   329                           
   330                           ; 1 bytes @ 0x0
   331  0020                     	ds	3
   332                           
   333                           	psect	maintext
   334  0083                     __pmaintext:	
   335 ;;
   336 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   337 ;;
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 86 in file "newmain.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0, pclath, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : B00/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0
   356 ;;      Temps:          0       3       0       0       0
   357 ;;      Totals:         0       3       0       0       0
   358 ;;Total ram usage:        3 bytes
   359 ;; Hardware stack levels required when called: 3
   360 ;; This function calls:
   361 ;;		_LED_set_off
   362 ;;		_USART_Init
   363 ;;		_registers
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _main
   371  0083                     _main:
   372  0083                     l798:	
   373                           ;incstack = 0
   374                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   375                           
   376                           
   377                           ;newmain.c: 87:     OSCCONbits.SCS = 0;
   378  0083  1683               	bsf	3,5	;RP0=1, select bank1
   379  0084  1303               	bcf	3,6	;RP1=0, select bank1
   380  0085  100F               	bcf	15,0	;volatile
   381                           
   382                           ;newmain.c: 88:     OSCCONbits.OSTS = 1;
   383  0086  158F               	bsf	15,3	;volatile
   384  0087                     l800:
   385                           
   386                           ;newmain.c: 90:     registers();
   387  0087  120A  118A  20EC  120A  118A  	fcall	_registers
   388                           
   389                           ;newmain.c: 91:     LED_set_off();
   390  008C  120A  118A  20F3  120A  118A  	fcall	_LED_set_off
   391  0091                     l802:
   392                           
   393                           ;newmain.c: 92:     USART_Init();
   394  0091  120A  118A  20B9  120A  118A  	fcall	_USART_Init
   395                           
   396                           ;newmain.c: 98:     _delay((unsigned long)((2000)*(20000000/4000.0)));
   397  0096  3033               	movlw	51
   398  0097  1283               	bcf	3,5	;RP0=0, select bank0
   399  0098  1303               	bcf	3,6	;RP1=0, select bank0
   400  0099  00A2               	movwf	??_main+2
   401  009A  30BB               	movlw	187
   402  009B  00A1               	movwf	??_main+1
   403  009C  30DF               	movlw	223
   404  009D  00A0               	movwf	??_main
   405  009E                     u87:
   406  009E  0BA0               	decfsz	??_main,f
   407  009F  289E               	goto	u87
   408  00A0  0BA1               	decfsz	??_main+1,f
   409  00A1  289E               	goto	u87
   410  00A2  0BA2               	decfsz	??_main+2,f
   411  00A3  289E               	goto	u87
   412                           
   413                           ;newmain.c: 103:     TMR0 = 100;
   414  00A4  3064               	movlw	100
   415  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   416  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   417  00A7  0081               	movwf	1	;volatile
   418  00A8                     l804:
   419                           
   420                           ;newmain.c: 104:     OPTION_REGbits.T0CS = 0;
   421  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   422  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   423  00AA  1281               	bcf	1,5	;volatile
   424  00AB                     l806:
   425                           
   426                           ;newmain.c: 105:     OPTION_REGbits.PSA = 0;
   427  00AB  1181               	bcf	1,3	;volatile
   428  00AC                     l808:
   429                           
   430                           ;newmain.c: 106:     OPTION_REGbits.PS = 0b100;
   431  00AC  0801               	movf	1,w	;volatile
   432  00AD  39F8               	andlw	-8
   433  00AE  3804               	iorlw	4
   434  00AF  0081               	movwf	1	;volatile
   435  00B0                     l810:
   436                           
   437                           ;newmain.c: 107:     INTCONbits.T0IE = 1;
   438  00B0  168B               	bsf	11,5	;volatile
   439  00B1                     l812:
   440                           
   441                           ;newmain.c: 108:     INTCONbits.T0IF = 0;
   442  00B1  110B               	bcf	11,2	;volatile
   443  00B2                     l814:
   444                           
   445                           ;newmain.c: 110:     RD3=1;
   446  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   447  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   448  00B4  1588               	bsf	8,3	;volatile
   449  00B5                     l87:	
   450                           ;newmain.c: 112:     while(1) {
   451                           
   452  00B5                     l88:	
   453                           ;newmain.c: 130:     }
   454                           
   455  00B5  28B5               	goto	l87
   456  00B6  120A  118A  280E   	ljmp	start
   457  00B9                     __end_of_main:
   458                           
   459                           	psect	text1
   460  00EC                     __ptext1:	
   461 ;; *************** function _registers *****************
   462 ;; Defined at:
   463 ;;		line 80 in file "./pins.h"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		None
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; Hardware stack levels required when called: 2
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _registers
   493  00EC                     _registers:
   494  00EC                     l794:	
   495                           ;incstack = 0
   496                           ; Regs used in _registers: []
   497                           
   498                           
   499                           ;./pins.h: 81:     TRISDbits.TRISD3 = 0;
   500  00EC  1683               	bsf	3,5	;RP0=1, select bank1
   501  00ED  1303               	bcf	3,6	;RP1=0, select bank1
   502  00EE  1188               	bcf	8,3	;volatile
   503                           
   504                           ;./pins.h: 82:     TRISDbits.TRISD2 = 0;
   505  00EF  1108               	bcf	8,2	;volatile
   506                           
   507                           ;./pins.h: 83:     TRISDbits.TRISD1 = 0;
   508  00F0  1088               	bcf	8,1	;volatile
   509                           
   510                           ;./pins.h: 84:     TRISDbits.TRISD0 = 0;
   511  00F1  1008               	bcf	8,0	;volatile
   512  00F2                     l59:
   513  00F2  0008               	return
   514  00F3                     __end_of_registers:
   515                           
   516                           	psect	text2
   517  00B9                     __ptext2:	
   518 ;; *************** function _USART_Init *****************
   519 ;; Defined at:
   520 ;;		line 52 in file "./bluetooth.h"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; Hardware stack levels required when called: 2
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _USART_Init
   550  00B9                     _USART_Init:
   551  00B9                     l782:	
   552                           ;incstack = 0
   553                           ; Regs used in _USART_Init: [wreg+status,2]
   554                           
   555                           
   556                           ;./bluetooth.h: 53:     TXSTAbits.SYNC = 0;
   557  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   558  00BA  1303               	bcf	3,6	;RP1=0, select bank1
   559  00BB  1218               	bcf	24,4	;volatile
   560                           
   561                           ;./bluetooth.h: 54:     RCSTAbits.SPEN = 1;
   562  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   563  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   564  00BE  1798               	bsf	24,7	;volatile
   565                           
   566                           ;./bluetooth.h: 55:     TXSTAbits.TXEN = 1;
   567  00BF  1683               	bsf	3,5	;RP0=1, select bank1
   568  00C0  1303               	bcf	3,6	;RP1=0, select bank1
   569  00C1  1698               	bsf	24,5	;volatile
   570                           
   571                           ;./bluetooth.h: 56:     RCSTAbits.CREN = 1;
   572  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   573  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   574  00C4  1618               	bsf	24,4	;volatile
   575                           
   576                           ;./bluetooth.h: 58:     TXSTAbits.BRGH = 1;
   577  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   578  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   579  00C7  1518               	bsf	24,2	;volatile
   580                           
   581                           ;./bluetooth.h: 59:     BAUDCTLbits.BRG16 = 0;
   582  00C8  1683               	bsf	3,5	;RP0=1, select bank3
   583  00C9  1703               	bsf	3,6	;RP1=1, select bank3
   584  00CA  1187               	bcf	7,3	;volatile
   585  00CB                     l784:
   586                           
   587                           ;./bluetooth.h: 66:     SPBRGH = 0;
   588  00CB  1683               	bsf	3,5	;RP0=1, select bank1
   589  00CC  1303               	bcf	3,6	;RP1=0, select bank1
   590  00CD  019A               	clrf	26	;volatile
   591  00CE                     l786:
   592                           
   593                           ;./bluetooth.h: 67:     SPBRG = 129;
   594  00CE  3081               	movlw	129
   595  00CF  0099               	movwf	25	;volatile
   596  00D0                     l788:
   597                           
   598                           ;./bluetooth.h: 73:     PIE1bits.RCIE = 1;
   599  00D0  168C               	bsf	12,5	;volatile
   600  00D1                     l790:
   601                           
   602                           ;./bluetooth.h: 74:     INTCONbits.PEIE = 1;
   603  00D1  170B               	bsf	11,6	;volatile
   604  00D2                     l792:
   605                           
   606                           ;./bluetooth.h: 75:     INTCONbits.GIE = 1;
   607  00D2  178B               	bsf	11,7	;volatile
   608  00D3                     l47:
   609  00D3  0008               	return
   610  00D4                     __end_of_USART_Init:
   611                           
   612                           	psect	text3
   613  00F3                     __ptext3:	
   614 ;; *************** function _LED_set_off *****************
   615 ;; Defined at:
   616 ;;		line 88 in file "./pins.h"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		None
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 2
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _LED_set_off
   646  00F3                     _LED_set_off:
   647  00F3                     l796:	
   648                           ;incstack = 0
   649                           ; Regs used in _LED_set_off: []
   650                           
   651                           
   652                           ;./pins.h: 89:     RD3 = RD2 = RD1 = RD0 = 0;
   653  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   654  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   655  00F5  1008               	bcf	8,0	;volatile
   656  00F6  1088               	bcf	8,1	;volatile
   657  00F7  1108               	bcf	8,2	;volatile
   658  00F8  1188               	bcf	8,3	;volatile
   659  00F9                     l62:
   660  00F9  0008               	return
   661  00FA                     __end_of_LED_set_off:
   662                           
   663                           	psect	text4
   664  001F                     __ptext4:	
   665 ;; *************** function _isr *****************
   666 ;; Defined at:
   667 ;;		line 44 in file "newmain.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          4       0       0       0       0
   684 ;;      Totals:         4       0       0       0       0
   685 ;;Total ram usage:        4 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; Hardware stack levels required when called: 1
   688 ;; This function calls:
   689 ;;		_UART_GET
   690 ;;		_UART_WRITE
   691 ;; This function is called by:
   692 ;;		Interrupt level 1
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _isr
   698  001F                     _isr:
   699  001F                     i1l702:
   700                           
   701                           ;newmain.c: 49:     if(RCIF) {
   702  001F  1283               	bcf	3,5	;RP0=0, select bank0
   703  0020  1303               	bcf	3,6	;RP1=0, select bank0
   704  0021  1E8C               	btfss	12,5	;volatile
   705  0022  2824               	goto	u2_21
   706  0023  2825               	goto	u2_20
   707  0024                     u2_21:
   708  0024  283B               	goto	i1l712
   709  0025                     u2_20:
   710  0025                     i1l704:
   711                           
   712                           ;newmain.c: 50:         ferr = FERR;
   713  0025  3000               	movlw	0
   714  0026  1918               	btfsc	24,2	;volatile
   715  0027  3001               	movlw	1
   716  0028  00F9               	movwf	_ferr
   717  0029                     i1l706:
   718                           
   719                           ;newmain.c: 51:         if(OERR) {
   720  0029  1C98               	btfss	24,1	;volatile
   721  002A  282C               	goto	u3_21
   722  002B  282D               	goto	u3_20
   723  002C                     u3_21:
   724  002C  282F               	goto	i1l710
   725  002D                     u3_20:
   726  002D                     i1l708:
   727                           
   728                           ;newmain.c: 52:             RCSTAbits.CREN = 0;
   729  002D  1218               	bcf	24,4	;volatile
   730                           
   731                           ;newmain.c: 53:             RCSTAbits.CREN = 1;
   732  002E  1618               	bsf	24,4	;volatile
   733  002F                     i1l710:
   734                           
   735                           ;newmain.c: 56:         UART_GET(&data);
   736  002F  307A               	movlw	(low (_data| 0))& (0+255)
   737  0030  120A  118A  20E2  120A  118A  	fcall	_UART_GET
   738                           
   739                           ;newmain.c: 57:         UART_WRITE(&data);
   740  0035  307A               	movlw	(low (_data| 0))& (0+255)
   741  0036  120A  118A  20D4  120A  118A  	fcall	_UART_WRITE
   742  003B                     i1l712:
   743                           
   744                           ;newmain.c: 60:     if (data == 'A') {
   745  003B  3041               	movlw	65
   746  003C  067A               	xorwf	_data,w
   747  003D  1D03               	btfss	3,2
   748  003E  2840               	goto	u4_21
   749  003F  2841               	goto	u4_20
   750  0040                     u4_21:
   751  0040  284A               	goto	i1l718
   752  0041                     u4_20:
   753  0041                     i1l714:
   754                           
   755                           ;newmain.c: 61:         RD0 = !RD0;
   756  0041  3001               	movlw	1
   757  0042  1283               	bcf	3,5	;RP0=0, select bank0
   758  0043  1303               	bcf	3,6	;RP1=0, select bank0
   759  0044  0688               	xorwf	8,f
   760                           
   761                           ;newmain.c: 62:         TMR0 = 100;
   762  0045  3064               	movlw	100
   763  0046  0081               	movwf	1	;volatile
   764  0047                     i1l716:
   765                           
   766                           ;newmain.c: 63:         OPTION_REGbits.T0CS = 0;
   767  0047  1683               	bsf	3,5	;RP0=1, select bank1
   768  0048  1303               	bcf	3,6	;RP1=0, select bank1
   769  0049  1281               	bcf	1,5	;volatile
   770  004A                     i1l718:
   771                           
   772                           ;newmain.c: 66:     if(T0IF) {
   773  004A  1D0B               	btfss	11,2	;volatile
   774  004B  284D               	goto	u5_21
   775  004C  284E               	goto	u5_20
   776  004D                     u5_21:
   777  004D  287A               	goto	i1l80
   778  004E                     u5_20:
   779  004E                     i1l720:
   780                           
   781                           ;newmain.c: 67:         if(count == 5) {
   782  004E  3005               	movlw	5
   783  004F  0678               	xorwf	_count,w
   784  0050  1D03               	btfss	3,2
   785  0051  2853               	goto	u6_21
   786  0052  2854               	goto	u6_20
   787  0053                     u6_21:
   788  0053  285A               	goto	i1l730
   789  0054                     u6_20:
   790  0054                     i1l722:
   791                           
   792                           ;newmain.c: 68:             OPTION_REGbits.T0CS = 1;
   793  0054  1683               	bsf	3,5	;RP0=1, select bank1
   794  0055  1303               	bcf	3,6	;RP1=0, select bank1
   795  0056  1681               	bsf	1,5	;volatile
   796                           
   797                           ;newmain.c: 69:             INTCONbits.T0IF = 0;
   798  0057  110B               	bcf	11,2	;volatile
   799  0058                     i1l724:
   800                           
   801                           ;newmain.c: 70:             count = 0;
   802  0058  01F8               	clrf	_count
   803  0059  287A               	goto	i1l80
   804  005A                     i1l730:
   805  005A  30E8               	movlw	232
   806  005B  0676               	xorwf	_ms,w
   807  005C  3003               	movlw	3
   808  005D  1903               	skipnz
   809  005E  0677               	xorwf	_ms+1,w
   810  005F  1D03               	btfss	3,2
   811  0060  2862               	goto	u7_21
   812  0061  2863               	goto	u7_20
   813  0062                     u7_21:
   814  0062  286D               	goto	i1l738
   815  0063                     u7_20:
   816  0063                     i1l732:
   817                           
   818                           ;newmain.c: 74:             RD2 = !RD2;
   819  0063  3004               	movlw	4
   820  0064  1283               	bcf	3,5	;RP0=0, select bank0
   821  0065  1303               	bcf	3,6	;RP1=0, select bank0
   822  0066  0688               	xorwf	8,f
   823  0067                     i1l734:
   824                           
   825                           ;newmain.c: 75:             ms = 0;
   826  0067  01F6               	clrf	_ms
   827  0068  01F7               	clrf	_ms+1
   828  0069                     i1l736:
   829                           
   830                           ;newmain.c: 76:             count++;
   831  0069  3001               	movlw	1
   832  006A  00F2               	movwf	??_isr
   833  006B  0872               	movf	??_isr,w
   834  006C  07F8               	addwf	_count,f
   835  006D                     i1l738:
   836                           
   837                           ;newmain.c: 79:         RD1 = !RD1;
   838  006D  3002               	movlw	2
   839  006E  1283               	bcf	3,5	;RP0=0, select bank0
   840  006F  1303               	bcf	3,6	;RP1=0, select bank0
   841  0070  0688               	xorwf	8,f
   842  0071                     i1l740:
   843                           
   844                           ;newmain.c: 80:         TMR0 = 100;
   845  0071  3064               	movlw	100
   846  0072  0081               	movwf	1	;volatile
   847  0073                     i1l742:
   848                           
   849                           ;newmain.c: 81:         INTCONbits.T0IF = 0;
   850  0073  110B               	bcf	11,2	;volatile
   851  0074                     i1l744:
   852                           
   853                           ;newmain.c: 82:         ms++;
   854  0074  3001               	movlw	1
   855  0075  07F6               	addwf	_ms,f
   856  0076  1803               	skipnc
   857  0077  0AF7               	incf	_ms+1,f
   858  0078  3000               	movlw	0
   859  0079  07F7               	addwf	_ms+1,f
   860  007A                     i1l80:
   861  007A  0875               	movf	??_isr+3,w
   862  007B  008A               	movwf	10
   863  007C  0874               	movf	??_isr+2,w
   864  007D  0084               	movwf	4
   865  007E  0E73               	swapf	??_isr+1,w
   866  007F  0083               	movwf	3
   867  0080  0EFE               	swapf	btemp,f
   868  0081  0E7E               	swapf	btemp,w
   869  0082  0009               	retfie
   870  0083                     __end_of_isr:
   871                           
   872                           	psect	intentry
   873  0004                     __pintentry:	
   874                           ;incstack = 0
   875                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   876                           
   877  0004                     interrupt_function:
   878  007E                     saved_w	set	btemp
   879  0004  00FE               	movwf	btemp
   880  0005  0E03               	swapf	3,w
   881  0006  00F3               	movwf	??_isr+1
   882  0007  0804               	movf	4,w
   883  0008  00F4               	movwf	??_isr+2
   884  0009  080A               	movf	10,w
   885  000A  00F5               	movwf	??_isr+3
   886  000B  120A  118A  281F   	ljmp	_isr
   887                           
   888                           	psect	text5
   889  00D4                     __ptext5:	
   890 ;; *************** function _UART_WRITE *****************
   891 ;; Defined at:
   892 ;;		line 78 in file "./bluetooth.h"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  send            1    wreg     PTR unsigned char 
   895 ;;		 -> data(1), 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  send            1    0[COMMON] PTR unsigned char 
   898 ;;		 -> data(1), 
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr0l, fsr0h
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         1       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0
   911 ;;      Totals:         1       0       0       0       0
   912 ;;Total ram usage:        1 bytes
   913 ;; Hardware stack levels used: 1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_isr
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           
   922                           ;psect for function _UART_WRITE
   923  00D4                     _UART_WRITE:
   924                           
   925                           ;incstack = 0
   926                           ; Regs used in _UART_WRITE: [wregfsr0]
   927                           ;UART_WRITE@send stored from wreg
   928  00D4  00F0               	movwf	UART_WRITE@send
   929  00D5                     i1l694:
   930                           
   931                           ;./bluetooth.h: 79:     TXREG = *send;
   932  00D5  0870               	movf	UART_WRITE@send,w
   933  00D6  0084               	movwf	4
   934  00D7  0800               	movf	0,w
   935  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   936  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   937  00DA  0099               	movwf	25	;volatile
   938  00DB                     i1l50:	
   939                           ;./bluetooth.h: 80:     while(!TXSTAbits.TRMT);
   940                           
   941  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   942  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   943  00DD  1C98               	btfss	24,1	;volatile
   944  00DE  28E0               	goto	u1_21
   945  00DF  28E1               	goto	u1_20
   946  00E0                     u1_21:
   947  00E0  28DB               	goto	i1l50
   948  00E1                     u1_20:
   949  00E1                     i1l53:
   950  00E1  0008               	return
   951  00E2                     __end_of_UART_WRITE:
   952                           
   953                           	psect	text6
   954  00E2                     __ptext6:	
   955 ;; *************** function _UART_GET *****************
   956 ;; Defined at:
   957 ;;		line 92 in file "./bluetooth.h"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  value           1    wreg     PTR unsigned char 
   960 ;;		 -> data(1), 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  value           1    1[COMMON] PTR unsigned char 
   963 ;;		 -> data(1), 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, fsr0l, fsr0h
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         1       0       0       0       0
   975 ;;      Temps:          1       0       0       0       0
   976 ;;      Totals:         2       0       0       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_isr
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _UART_GET
   988  00E2                     _UART_GET:
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _UART_GET: [wregfsr0]
   992                           ;UART_GET@value stored from wreg
   993  00E2  00F1               	movwf	UART_GET@value
   994  00E3                     i1l696:
   995                           
   996                           ;./bluetooth.h: 93:     *value = RCREG;
   997  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   998  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   999  00E5  081A               	movf	26,w	;volatile
  1000  00E6  00F0               	movwf	??_UART_GET
  1001  00E7  0871               	movf	UART_GET@value,w
  1002  00E8  0084               	movwf	4
  1003  00E9  0870               	movf	??_UART_GET,w
  1004  00EA  0080               	movwf	0
  1005  00EB                     i1l56:
  1006  00EB  0008               	return
  1007  00EC                     __end_of_UART_GET:
  1008  007E                     btemp	set	126	;btemp
  1009  007E                     wtemp0	set	126
  1010                           
  1011                           	psect	config
  1012                           
  1013                           ;Config register CONFIG1 @ 0x2007
  1014                           ;	Oscillator Selection bits
  1015                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1016                           ;	Watchdog Timer Enable bit
  1017                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1018                           ;	Power-up Timer Enable bit
  1019                           ;	PWRTE = ON, PWRT enabled
  1020                           ;	RE3/MCLR pin function select bit
  1021                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1022                           ;	Code Protection bit
  1023                           ;	CP = OFF, Program memory code protection is disabled
  1024                           ;	Data Code Protection bit
  1025                           ;	CPD = OFF, Data memory code protection is disabled
  1026                           ;	Brown Out Reset Selection bits
  1027                           ;	BOREN = ON, BOR enabled
  1028                           ;	Internal External Switchover bit
  1029                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1030                           ;	Fail-Safe Clock Monitor Enabled bit
  1031                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1032                           ;	Low Voltage Programming Enable bit
  1033                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1034                           ;	In-Circuit Debugger Mode bit
  1035                           ;	DEBUG = 0x1, unprogrammed default
  1036  2007                     	org	8199
  1037  2007  2FE2               	dw	12258
  1038                           
  1039                           ;Config register CONFIG2 @ 0x2008
  1040                           ;	Brown-out Reset Selection bit
  1041                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  1042                           ;	Flash Program Memory Self Write Enable bits
  1043                           ;	WRT = OFF, Write protection off
  1044  2008                     	org	8200
  1045  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_GET@value	PTR unsigned char  size(1) Largest target is 1
		 -> data(COMMON[1]), 

    UART_WRITE@send	PTR unsigned char  size(1) Largest target is 1
		 -> data(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_UART_GET

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
                        _LED_set_off
                         _USART_Init
                          _registers
 ---------------------------------------------------------------------------------
 (1) _registers                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_set_off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0      90
                                              2 COMMON     4     4      0
                           _UART_GET
                         _UART_WRITE
 ---------------------------------------------------------------------------------
 (3) _UART_WRITE                                           1     1      0      45
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _UART_GET                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_set_off
   _USART_Init
   _registers

 _isr (ROOT)
   _UART_GET
   _UART_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       3       5        3.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 03 03:52:46 2022

                     l62 00F9                       l47 00D3                       l59 00F2  
                     l87 00B5                       l88 00B5                       u87 009E  
                     _ms 0076                      l800 0087                      l810 00B0  
                    l802 0091                      l812 00B1                      l804 00A8  
                    l814 00B2                      l806 00AB                      l808 00AC  
                    l790 00D1                      l782 00B9                      l792 00D2  
                    l784 00CB                      l786 00CE                      l794 00EC  
                    l796 00F3                      l788 00D0                      l798 0083  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _isr 001F                      fsr0 0004  
                    indf 0000                     ?_isr 0070                     _T0IF 005A  
                   _FERR 00C2                     i1l50 00DB                     _RCIF 0065  
                   i1l53 00E1                     i1l56 00EB                     i1l80 007A  
                   _OERR 00C1                     _TMR0 0001                     u1_20 00E1  
                   u1_21 00E0                     u2_20 0025                     u2_21 0024  
                   u3_20 002D                     u3_21 002C                     u4_20 0041  
                   u4_21 0040                     u5_20 004E                     u5_21 004D  
                   u6_20 0054                     u6_21 0053                     u7_20 0063  
                   u7_21 0062                     _data 007A                     _ferr 0079  
                   _main 0083                     btemp 007E                     start 000E  
           ?_LED_set_off 0070                    ??_isr 0072                    ?_main 0070  
                  i1l710 002F                    i1l702 001F                    i1l720 004E  
                  i1l704 0025                    i1l712 003B                    i1l722 0054  
                  i1l730 005A                    i1l714 0041                    i1l706 0029  
                  i1l740 0071                    i1l732 0063                    i1l724 0058  
                  i1l716 0047                    i1l708 002D                    i1l742 0073  
                  i1l734 0067                    i1l718 004A                    i1l744 0074  
                  i1l736 0069                    i1l738 006D                    i1l694 00D5  
                  i1l696 00E3                    _RCREG 001A              ?_UART_WRITE 0070  
                  _SPBRG 0099                    _TXREG 0019         __end_of_UART_GET 00EC  
                  _count 0078                    pclath 000A                    status 0003  
                  wtemp0 007E              ?_USART_Init 0070          __initialization 0011  
           __end_of_main 00B9                   ??_main 0020                   _SPBRGH 009A  
    __size_of_UART_WRITE 000E             __pdataCOMMON 007A                   saved_w 007E  
    __size_of_USART_Init 001B           UART_WRITE@send 0070  __end_of__initialization 001B  
         __pcstackCOMMON 0070                ?_UART_GET 0070     __size_of_LED_set_off 0007  
         _OPTION_REGbits 0081               __pmaintext 0083               ??_UART_GET 0070  
             __pintentry 0004       __size_of_registers 0007             ??_UART_WRITE 0070  
           ??_USART_Init 0020       __end_of_UART_WRITE 00E2                  __ptext1 00EC  
                __ptext2 00B9                  __ptext3 00F3                  __ptext4 001F  
                __ptext5 00D4                  __ptext6 00E2             __size_of_isr 0064  
     __end_of_USART_Init 00D4     end_of_initialization 001B        __end_of_registers 00F3  
              _RCSTAbits 0018                _TRISDbits 0088                _TXSTAbits 0098  
          UART_GET@value 0071        __size_of_UART_GET 000A            __pidataCOMMON 00FA  
            _BAUDCTLbits 0187      start_initialization 0011              __end_of_isr 0083  
          ??_LED_set_off 0020              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020      __end_of_LED_set_off 00FA        interrupt_function 0004  
              _registers 00EC                 _PIE1bits 008C                 _UART_GET 00E2  
             ?_registers 0070              _LED_set_off 00F3            __size_of_main 0036  
             _INTCONbits 000B                 intlevel1 0000              ??_registers 0020  
             _OSCCONbits 008F               _UART_WRITE 00D4               _USART_Init 00B9  
