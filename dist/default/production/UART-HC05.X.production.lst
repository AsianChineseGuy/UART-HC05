

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 29 14:24:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataCOMMON
   211  009D                     __pidataCOMMON:
   212                           
   213                           ;initializer for _data
   214  009D  3454               	retlw	84
   215  001A                     _RCREG	set	26
   216  0019                     _TXREG	set	25
   217  000B                     _INTCONbits	set	11
   218  0018                     _RCSTAbits	set	24
   219  00C1                     _OERR	set	193
   220  00C2                     _FERR	set	194
   221  0040                     _RD0	set	64
   222  0041                     _RD1	set	65
   223  0042                     _RD2	set	66
   224  0043                     _RD3	set	67
   225  008F                     _OSCCONbits	set	143
   226  0088                     _TRISDbits	set	136
   227  008C                     _PIE1bits	set	140
   228  0099                     _SPBRG	set	153
   229  009A                     _SPBRGH	set	154
   230  0098                     _TXSTAbits	set	152
   231  0187                     _BAUDCTLbits	set	391
   232                           
   233                           	psect	cinit
   234  000F                     start_initialization:	
   235                           ; #config settings
   236                           
   237  000F                     __initialization:
   238                           
   239                           ; Initialize objects allocated to COMMON
   240  000F  120A  118A  209D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   241  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   242                           
   243                           ; Clear objects allocated to COMMON
   244  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   245  0016                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248  0016                     __end_of__initialization:
   249  0016  0183               	clrf	3
   250  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMMON
   253  0077                     __pbssCOMMON:
   254  0077                     _ferr:
   255  0077                     	ds	1
   256                           
   257                           	psect	dataCOMMON
   258  0078                     __pdataCOMMON:
   259  0078                     _data:
   260  0078                     	ds	1
   261                           
   262                           	psect	cstackCOMMON
   263  0070                     __pcstackCOMMON:
   264  0070                     ?_USART_Init:
   265  0070                     ?_UART_WRITE:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ??_UART_WRITE:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_registers:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_LED_set_off:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_isr:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     UART_WRITE@send:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288  0070                     	ds	1
   289  0071                     ??_isr:
   290                           
   291                           ; 1 bytes @ 0x1
   292  0071                     	ds	3
   293  0074                     ??_USART_Init:
   294  0074                     ??_registers:	
   295                           ; 1 bytes @ 0x4
   296                           
   297  0074                     ??_LED_set_off:	
   298                           ; 1 bytes @ 0x4
   299                           
   300  0074                     ??_main:	
   301                           ; 1 bytes @ 0x4
   302                           
   303                           
   304                           ; 1 bytes @ 0x4
   305  0074                     	ds	3
   306                           
   307                           	psect	maintext
   308  001A                     __pmaintext:	
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 79 in file "newmain.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2, status,0, pclath, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : B00/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   328 ;;      Params:         0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0
   330 ;;      Temps:          3       0       0       0       0
   331 ;;      Totals:         3       0       0       0       0
   332 ;;Total ram usage:        3 bytes
   333 ;; Hardware stack levels required when called: 3
   334 ;; This function calls:
   335 ;;		_LED_set_off
   336 ;;		_USART_Init
   337 ;;		_registers
   338 ;; This function is called by:
   339 ;;		Startup code after reset
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           
   344                           ;psect for function _main
   345  001A                     _main:
   346  001A                     l694:	
   347                           ;incstack = 0
   348                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   349                           
   350                           
   351                           ;newmain.c: 80:     OSCCONbits.SCS = 0;
   352  001A  1683               	bsf	3,5	;RP0=1, select bank1
   353  001B  1303               	bcf	3,6	;RP1=0, select bank1
   354  001C  100F               	bcf	15,0	;volatile
   355                           
   356                           ;newmain.c: 81:     OSCCONbits.OSTS = 1;
   357  001D  158F               	bsf	15,3	;volatile
   358  001E                     l696:
   359                           
   360                           ;newmain.c: 83:     registers();
   361  001E  120A  118A  208F  120A  118A  	fcall	_registers
   362                           
   363                           ;newmain.c: 84:     LED_set_off();
   364  0023  120A  118A  2096  120A  118A  	fcall	_LED_set_off
   365  0028                     l698:
   366                           
   367                           ;newmain.c: 85:     USART_Init();
   368  0028  120A  118A  2068  120A  118A  	fcall	_USART_Init
   369                           
   370                           ;newmain.c: 86:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   371  002D  301A               	movlw	26
   372  002E  00F6               	movwf	??_main+2
   373  002F  305E               	movlw	94
   374  0030  00F5               	movwf	??_main+1
   375  0031  306E               	movlw	110
   376  0032  00F4               	movwf	??_main
   377  0033                     u47:
   378  0033  0BF4               	decfsz	??_main,f
   379  0034  2833               	goto	u47
   380  0035  0BF5               	decfsz	??_main+1,f
   381  0036  2833               	goto	u47
   382  0037  0BF6               	decfsz	??_main+2,f
   383  0038  2833               	goto	u47
   384  0039  0000               	nop
   385  003A                     l700:
   386                           
   387                           ;newmain.c: 87:     RD3=1;
   388  003A  1283               	bcf	3,5	;RP0=0, select bank0
   389  003B  1303               	bcf	3,6	;RP1=0, select bank0
   390  003C  1588               	bsf	8,3	;volatile
   391  003D                     l67:	
   392                           ;newmain.c: 89:     while(1) {
   393                           
   394  003D                     l68:	
   395                           ;newmain.c: 107:     }
   396                           
   397  003D  283D               	goto	l67
   398  003E  120A  118A  280C   	ljmp	start
   399  0041                     __end_of_main:
   400                           
   401                           	psect	text1
   402  008F                     __ptext1:	
   403 ;; *************** function _registers *****************
   404 ;; Defined at:
   405 ;;		line 80 in file "./pins.h"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		None
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0
   422 ;;      Totals:         0       0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; Hardware stack levels required when called: 2
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           
   434                           ;psect for function _registers
   435  008F                     _registers:
   436  008F                     l676:	
   437                           ;incstack = 0
   438                           ; Regs used in _registers: []
   439                           
   440                           
   441                           ;./pins.h: 81:     TRISDbits.TRISD3 = 0;
   442  008F  1683               	bsf	3,5	;RP0=1, select bank1
   443  0090  1303               	bcf	3,6	;RP1=0, select bank1
   444  0091  1188               	bcf	8,3	;volatile
   445                           
   446                           ;./pins.h: 82:     TRISDbits.TRISD2 = 0;
   447  0092  1108               	bcf	8,2	;volatile
   448                           
   449                           ;./pins.h: 83:     TRISDbits.TRISD1 = 0;
   450  0093  1088               	bcf	8,1	;volatile
   451                           
   452                           ;./pins.h: 84:     TRISDbits.TRISD0 = 0;
   453  0094  1008               	bcf	8,0	;volatile
   454  0095                     l48:
   455  0095  0008               	return
   456  0096                     __end_of_registers:
   457                           
   458                           	psect	text2
   459  0068                     __ptext2:	
   460 ;; *************** function _USART_Init *****************
   461 ;; Defined at:
   462 ;;		line 52 in file "./bluetooth.h"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; Hardware stack levels required when called: 2
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _USART_Init
   492  0068                     _USART_Init:
   493  0068                     l662:	
   494                           ;incstack = 0
   495                           ; Regs used in _USART_Init: [wreg+status,2]
   496                           
   497                           
   498                           ;./bluetooth.h: 53:     TXSTAbits.SYNC = 0;
   499  0068  1683               	bsf	3,5	;RP0=1, select bank1
   500  0069  1303               	bcf	3,6	;RP1=0, select bank1
   501  006A  1218               	bcf	24,4	;volatile
   502                           
   503                           ;./bluetooth.h: 54:     RCSTAbits.SPEN = 1;
   504  006B  1283               	bcf	3,5	;RP0=0, select bank0
   505  006C  1303               	bcf	3,6	;RP1=0, select bank0
   506  006D  1798               	bsf	24,7	;volatile
   507                           
   508                           ;./bluetooth.h: 55:     TXSTAbits.TXEN = 1;
   509  006E  1683               	bsf	3,5	;RP0=1, select bank1
   510  006F  1303               	bcf	3,6	;RP1=0, select bank1
   511  0070  1698               	bsf	24,5	;volatile
   512                           
   513                           ;./bluetooth.h: 56:     RCSTAbits.CREN = 1;
   514  0071  1283               	bcf	3,5	;RP0=0, select bank0
   515  0072  1303               	bcf	3,6	;RP1=0, select bank0
   516  0073  1618               	bsf	24,4	;volatile
   517                           
   518                           ;./bluetooth.h: 58:     TXSTAbits.BRGH = 1;
   519  0074  1683               	bsf	3,5	;RP0=1, select bank1
   520  0075  1303               	bcf	3,6	;RP1=0, select bank1
   521  0076  1518               	bsf	24,2	;volatile
   522                           
   523                           ;./bluetooth.h: 59:     BAUDCTLbits.BRG16 = 0;
   524  0077  1683               	bsf	3,5	;RP0=1, select bank3
   525  0078  1703               	bsf	3,6	;RP1=1, select bank3
   526  0079  1187               	bcf	7,3	;volatile
   527  007A                     l664:
   528                           
   529                           ;./bluetooth.h: 66:     SPBRGH = 0;
   530  007A  1683               	bsf	3,5	;RP0=1, select bank1
   531  007B  1303               	bcf	3,6	;RP1=0, select bank1
   532  007C  019A               	clrf	26	;volatile
   533  007D                     l666:
   534                           
   535                           ;./bluetooth.h: 67:     SPBRG = 129;
   536  007D  3081               	movlw	129
   537  007E  0099               	movwf	25	;volatile
   538  007F                     l668:
   539                           
   540                           ;./bluetooth.h: 73:     PIE1bits.RCIE = 1;
   541  007F  168C               	bsf	12,5	;volatile
   542  0080                     l670:
   543                           
   544                           ;./bluetooth.h: 74:     INTCONbits.PEIE = 1;
   545  0080  170B               	bsf	11,6	;volatile
   546  0081                     l672:
   547                           
   548                           ;./bluetooth.h: 75:     INTCONbits.GIE = 1;
   549  0081  178B               	bsf	11,7	;volatile
   550  0082                     l39:
   551  0082  0008               	return
   552  0083                     __end_of_USART_Init:
   553                           
   554                           	psect	text3
   555  0096                     __ptext3:	
   556 ;; *************** function _LED_set_off *****************
   557 ;; Defined at:
   558 ;;		line 88 in file "./pins.h"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		None
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; Hardware stack levels required when called: 2
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _LED_set_off
   588  0096                     _LED_set_off:
   589  0096                     l678:	
   590                           ;incstack = 0
   591                           ; Regs used in _LED_set_off: []
   592                           
   593                           
   594                           ;./pins.h: 89:     RD3 = RD2 = RD1 = RD0 = 0;
   595  0096  1283               	bcf	3,5	;RP0=0, select bank0
   596  0097  1303               	bcf	3,6	;RP1=0, select bank0
   597  0098  1008               	bcf	8,0	;volatile
   598  0099  1088               	bcf	8,1	;volatile
   599  009A  1108               	bcf	8,2	;volatile
   600  009B  1188               	bcf	8,3	;volatile
   601  009C                     l51:
   602  009C  0008               	return
   603  009D                     __end_of_LED_set_off:
   604                           
   605                           	psect	text4
   606  0041                     __ptext4:	
   607 ;; *************** function _isr *****************
   608 ;; Defined at:
   609 ;;		line 46 in file "newmain.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          3       0       0       0       0
   626 ;;      Totals:         3       0       0       0       0
   627 ;;Total ram usage:        3 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 1
   630 ;; This function calls:
   631 ;;		_UART_WRITE
   632 ;; This function is called by:
   633 ;;		Interrupt level 1
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           
   638                           ;psect for function _isr
   639  0041                     _isr:
   640  0041                     i1l680:
   641                           
   642                           ;newmain.c: 59:     ferr = FERR;
   643  0041  3000               	movlw	0
   644  0042  1283               	bcf	3,5	;RP0=0, select bank0
   645  0043  1303               	bcf	3,6	;RP1=0, select bank0
   646  0044  1918               	btfsc	24,2	;volatile
   647  0045  3001               	movlw	1
   648  0046  00F7               	movwf	_ferr
   649  0047                     i1l682:
   650                           
   651                           ;newmain.c: 60:     if(OERR) {
   652  0047  1C98               	btfss	24,1	;volatile
   653  0048  284A               	goto	u2_21
   654  0049  284B               	goto	u2_20
   655  004A                     u2_21:
   656  004A  284D               	goto	i1l686
   657  004B                     u2_20:
   658  004B                     i1l684:
   659                           
   660                           ;newmain.c: 61:         RCSTAbits.CREN = 0;
   661  004B  1218               	bcf	24,4	;volatile
   662                           
   663                           ;newmain.c: 62:         RCSTAbits.CREN = 1;
   664  004C  1618               	bsf	24,4	;volatile
   665  004D                     i1l686:
   666                           
   667                           ;newmain.c: 64:     data = RCREG;
   668  004D  081A               	movf	26,w	;volatile
   669  004E  00F1               	movwf	??_isr
   670  004F  0871               	movf	??_isr,w
   671  0050  00F8               	movwf	_data
   672  0051                     i1l688:
   673                           
   674                           ;newmain.c: 65:     UART_WRITE(data);
   675  0051  0878               	movf	_data,w
   676  0052  120A  118A  2083  120A  118A  	fcall	_UART_WRITE
   677  0057                     i1l690:
   678                           
   679                           ;newmain.c: 74:     if (data == 'A') {
   680  0057  3041               	movlw	65
   681  0058  0678               	xorwf	_data,w
   682  0059  1D03               	btfss	3,2
   683  005A  285C               	goto	u3_21
   684  005B  285D               	goto	u3_20
   685  005C                     u3_21:
   686  005C  2861               	goto	i1l62
   687  005D                     u3_20:
   688  005D                     i1l692:
   689                           
   690                           ;newmain.c: 75:         RD0 = !RD0;
   691  005D  3001               	movlw	1
   692  005E  1283               	bcf	3,5	;RP0=0, select bank0
   693  005F  1303               	bcf	3,6	;RP1=0, select bank0
   694  0060  0688               	xorwf	8,f
   695  0061                     i1l62:
   696  0061  0873               	movf	??_isr+2,w
   697  0062  008A               	movwf	10
   698  0063  0E72               	swapf	??_isr+1,w
   699  0064  0083               	movwf	3
   700  0065  0EFE               	swapf	btemp,f
   701  0066  0E7E               	swapf	btemp,w
   702  0067  0009               	retfie
   703  0068                     __end_of_isr:
   704                           
   705                           	psect	intentry
   706  0004                     __pintentry:	
   707                           ;incstack = 0
   708                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   709                           
   710  0004                     interrupt_function:
   711  007E                     saved_w	set	btemp
   712  0004  00FE               	movwf	btemp
   713  0005  0E03               	swapf	3,w
   714  0006  00F2               	movwf	??_isr+1
   715  0007  080A               	movf	10,w
   716  0008  00F3               	movwf	??_isr+2
   717  0009  120A  118A  2841   	ljmp	_isr
   718                           
   719                           	psect	text5
   720  0083                     __ptext5:	
   721 ;; *************** function _UART_WRITE *****************
   722 ;; Defined at:
   723 ;;		line 78 in file "./bluetooth.h"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  send            1    wreg     unsigned char 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  send            1    0[COMMON] unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       0       0       0       0
   738 ;;      Locals:         1       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         1       0       0       0       0
   741 ;;Total ram usage:        1 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_isr
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _UART_WRITE
   752  0083                     _UART_WRITE:
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in _UART_WRITE: [wreg]
   756                           ;UART_WRITE@send stored from wreg
   757  0083  00F0               	movwf	UART_WRITE@send
   758  0084                     i1l674:
   759                           
   760                           ;./bluetooth.h: 79:     TXREG = send;
   761  0084  0870               	movf	UART_WRITE@send,w
   762  0085  1283               	bcf	3,5	;RP0=0, select bank0
   763  0086  1303               	bcf	3,6	;RP1=0, select bank0
   764  0087  0099               	movwf	25	;volatile
   765  0088                     i1l42:	
   766                           ;./bluetooth.h: 80:     while(!TXSTAbits.TRMT);
   767                           
   768  0088  1683               	bsf	3,5	;RP0=1, select bank1
   769  0089  1303               	bcf	3,6	;RP1=0, select bank1
   770  008A  1C98               	btfss	24,1	;volatile
   771  008B  288D               	goto	u1_21
   772  008C  288E               	goto	u1_20
   773  008D                     u1_21:
   774  008D  2888               	goto	i1l42
   775  008E                     u1_20:
   776  008E                     i1l45:
   777  008E  0008               	return
   778  008F                     __end_of_UART_WRITE:
   779  007E                     btemp	set	126	;btemp
   780  007E                     wtemp0	set	126
   781                           
   782                           	psect	config
   783                           
   784                           ;Config register CONFIG1 @ 0x2007
   785                           ;	Oscillator Selection bits
   786                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   787                           ;	Watchdog Timer Enable bit
   788                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   789                           ;	Power-up Timer Enable bit
   790                           ;	PWRTE = ON, PWRT enabled
   791                           ;	RE3/MCLR pin function select bit
   792                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   793                           ;	Code Protection bit
   794                           ;	CP = OFF, Program memory code protection is disabled
   795                           ;	Data Code Protection bit
   796                           ;	CPD = OFF, Data memory code protection is disabled
   797                           ;	Brown Out Reset Selection bits
   798                           ;	BOREN = ON, BOR enabled
   799                           ;	Internal External Switchover bit
   800                           ;	IESO = ON, Internal/External Switchover mode is enabled
   801                           ;	Fail-Safe Clock Monitor Enabled bit
   802                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   803                           ;	Low Voltage Programming Enable bit
   804                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   805                           ;	In-Circuit Debugger Mode bit
   806                           ;	DEBUG = 0x1, unprogrammed default
   807  2007                     	org	8199
   808  2007  2FE2               	dw	12258
   809                           
   810                           ;Config register CONFIG2 @ 0x2008
   811                           ;	Brown-out Reset Selection bit
   812                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
   813                           ;	Flash Program Memory Self Write Enable bits
   814                           ;	WRT = OFF, Write protection off
   815  2008                     	org	8200
   816  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_UART_WRITE

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              4 COMMON     3     3      0
                        _LED_set_off
                         _USART_Init
                          _registers
 ---------------------------------------------------------------------------------
 (1) _registers                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_set_off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                         _UART_WRITE
 ---------------------------------------------------------------------------------
 (3) _UART_WRITE                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_set_off
   _USART_Init
   _registers

 _isr (ROOT)
   _UART_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       9      12        0.0%
ABS                  0      0       9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 29 14:24:52 2021

                     l51 009C                       l39 0082                       l48 0095  
                     l67 003D                       l68 003D                       u47 0033  
                    l700 003A                      l670 0080                      l662 0068  
                    l672 0081                      l664 007A                      l666 007D  
                    l668 007F                      l676 008F                      l678 0096  
                    l694 001A                      l696 001E                      l698 0028  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _isr 0041                     ?_isr 0070  
                   _FERR 00C2                     i1l42 0088                     i1l45 008E  
                   i1l62 0061                     _OERR 00C1                     u1_20 008E  
                   u1_21 008D                     u2_20 004B                     u2_21 004A  
                   u3_20 005D                     u3_21 005C                     _data 0078  
                   _ferr 0077                     _main 001A                     btemp 007E  
                   start 000C             ?_LED_set_off 0070                    ??_isr 0071  
                  ?_main 0070                    i1l680 0041                    i1l674 0084  
                  i1l690 0057                    i1l682 0047                    i1l692 005D  
                  i1l684 004B                    i1l686 004D                    i1l688 0051  
                  _RCREG 001A              ?_UART_WRITE 0070                    _SPBRG 0099  
                  _TXREG 0019                    pclath 000A                    status 0003  
                  wtemp0 007E              ?_USART_Init 0070          __initialization 000F  
           __end_of_main 0041                   ??_main 0074                   _SPBRGH 009A  
    __size_of_UART_WRITE 000C             __pdataCOMMON 0078                   saved_w 007E  
    __size_of_USART_Init 001B           UART_WRITE@send 0070  __end_of__initialization 0016  
         __pcstackCOMMON 0070     __size_of_LED_set_off 0007               __pmaintext 001A  
             __pintentry 0004       __size_of_registers 0007             ??_UART_WRITE 0070  
           ??_USART_Init 0074       __end_of_UART_WRITE 008F                  __ptext1 008F  
                __ptext2 0068                  __ptext3 0096                  __ptext4 0041  
                __ptext5 0083             __size_of_isr 0027       __end_of_USART_Init 0083  
   end_of_initialization 0016        __end_of_registers 0096                _RCSTAbits 0018  
              _TRISDbits 0088                _TXSTAbits 0098            __pidataCOMMON 009D  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 0068  
          ??_LED_set_off 0074              __pbssCOMMON 0077                ___latbits 0002  
    __end_of_LED_set_off 009D        interrupt_function 0004                _registers 008F  
               _PIE1bits 008C               ?_registers 0070              _LED_set_off 0096  
          __size_of_main 0027               _INTCONbits 000B                 intlevel1 0000  
            ??_registers 0074               _OSCCONbits 008F               _UART_WRITE 0083  
             _USART_Init 0068  
