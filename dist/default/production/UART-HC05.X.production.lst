

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jan 02 16:13:10 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataCOMMON
   212  00B4                     __pidataCOMMON:
   213                           
   214                           ;initializer for _data
   215  00B4  3454               	retlw	84
   216  001A                     _RCREG	set	26
   217  0019                     _TXREG	set	25
   218  000B                     _INTCONbits	set	11
   219  0018                     _RCSTAbits	set	24
   220  00C1                     _OERR	set	193
   221  00C2                     _FERR	set	194
   222  0065                     _RCIF	set	101
   223  0040                     _RD0	set	64
   224  0041                     _RD1	set	65
   225  0042                     _RD2	set	66
   226  0043                     _RD3	set	67
   227  008F                     _OSCCONbits	set	143
   228  0088                     _TRISDbits	set	136
   229  008C                     _PIE1bits	set	140
   230  0099                     _SPBRG	set	153
   231  009A                     _SPBRGH	set	154
   232  0098                     _TXSTAbits	set	152
   233  0187                     _BAUDCTLbits	set	391
   234                           
   235                           	psect	cinit
   236  0011                     start_initialization:	
   237                           ; #config settings
   238                           
   239  0011                     __initialization:
   240                           
   241                           ; Initialize objects allocated to COMMON
   242  0011  120A  118A  20B4  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   243  0016  00FA               	movwf	__pdataCOMMON& (0+127)
   244                           
   245                           ; Clear objects allocated to COMMON
   246  0017  01F8               	clrf	__pbssCOMMON& (0+127)
   247  0018  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   248  0019                     end_of_initialization:	
   249                           ;End of C runtime variable initialization code
   250                           
   251  0019                     __end_of__initialization:
   252  0019  0183               	clrf	3
   253  001A  120A  118A  284C   	ljmp	_main	;jump to C main() function
   254                           
   255                           	psect	bssCOMMON
   256  0078                     __pbssCOMMON:
   257  0078                     _value:
   258  0078                     	ds	1
   259  0079                     _ferr:
   260  0079                     	ds	1
   261                           
   262                           	psect	dataCOMMON
   263  007A                     __pdataCOMMON:
   264  007A                     _data:
   265  007A                     	ds	1
   266                           
   267                           	psect	cstackCOMMON
   268  0070                     __pcstackCOMMON:
   269  0070                     ?_USART_Init:
   270  0070                     ?_UART_WRITE:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ??_UART_WRITE:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_UART_GET:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ??_UART_GET:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_registers:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_LED_set_off:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_isr:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     UART_WRITE@send:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 1 bytes @ 0x0
   299  0070                     	ds	1
   300  0071                     UART_GET@value:
   301                           
   302                           ; 1 bytes @ 0x1
   303  0071                     	ds	1
   304  0072                     ??_isr:
   305                           
   306                           ; 1 bytes @ 0x2
   307  0072                     	ds	3
   308  0075                     ??_USART_Init:
   309  0075                     ??_registers:	
   310                           ; 1 bytes @ 0x5
   311                           
   312  0075                     ??_LED_set_off:	
   313                           ; 1 bytes @ 0x5
   314                           
   315  0075                     ??_main:	
   316                           ; 1 bytes @ 0x5
   317                           
   318                           
   319                           ; 1 bytes @ 0x5
   320  0075                     	ds	3
   321                           
   322                           	psect	maintext
   323  004C                     __pmaintext:	
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 64 in file "newmain.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, pclath, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : B00/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0
   345 ;;      Temps:          3       0       0       0       0
   346 ;;      Totals:         3       0       0       0       0
   347 ;;Total ram usage:        3 bytes
   348 ;; Hardware stack levels required when called: 3
   349 ;; This function calls:
   350 ;;		_LED_set_off
   351 ;;		_USART_Init
   352 ;;		_registers
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           
   359                           ;psect for function _main
   360  004C                     _main:
   361  004C                     l704:	
   362                           ;incstack = 0
   363                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   364                           
   365                           
   366                           ;newmain.c: 65:     OSCCONbits.SCS = 0;
   367  004C  1683               	bsf	3,5	;RP0=1, select bank1
   368  004D  1303               	bcf	3,6	;RP1=0, select bank1
   369  004E  100F               	bcf	15,0	;volatile
   370                           
   371                           ;newmain.c: 66:     OSCCONbits.OSTS = 1;
   372  004F  158F               	bsf	15,3	;volatile
   373  0050                     l706:
   374                           
   375                           ;newmain.c: 68:     registers();
   376  0050  120A  118A  20A6  120A  118A  	fcall	_registers
   377                           
   378                           ;newmain.c: 69:     LED_set_off();
   379  0055  120A  118A  20AD  120A  118A  	fcall	_LED_set_off
   380  005A                     l708:
   381                           
   382                           ;newmain.c: 70:     USART_Init();
   383  005A  120A  118A  2073  120A  118A  	fcall	_USART_Init
   384                           
   385                           ;newmain.c: 76:     _delay((unsigned long)((2000)*(20000000/4000.0)));
   386  005F  3033               	movlw	51
   387  0060  00F7               	movwf	??_main+2
   388  0061  30BB               	movlw	187
   389  0062  00F6               	movwf	??_main+1
   390  0063  30DF               	movlw	223
   391  0064  00F5               	movwf	??_main
   392  0065                     u57:
   393  0065  0BF5               	decfsz	??_main,f
   394  0066  2865               	goto	u57
   395  0067  0BF6               	decfsz	??_main+1,f
   396  0068  2865               	goto	u57
   397  0069  0BF7               	decfsz	??_main+2,f
   398  006A  2865               	goto	u57
   399  006B  286C               	nop2
   400  006C                     l710:
   401                           
   402                           ;newmain.c: 78:     RD3=1;
   403  006C  1283               	bcf	3,5	;RP0=0, select bank0
   404  006D  1303               	bcf	3,6	;RP1=0, select bank0
   405  006E  1588               	bsf	8,3	;volatile
   406  006F                     l75:	
   407                           ;newmain.c: 80:     while(1) {
   408                           
   409  006F                     l76:	
   410                           ;newmain.c: 98:     }
   411                           
   412  006F  286F               	goto	l75
   413  0070  120A  118A  280E   	ljmp	start
   414  0073                     __end_of_main:
   415                           
   416                           	psect	text1
   417  00A6                     __ptext1:	
   418 ;; *************** function _registers *****************
   419 ;; Defined at:
   420 ;;		line 80 in file "./pins.h"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		None
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0
   437 ;;      Totals:         0       0       0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels used: 1
   440 ;; Hardware stack levels required when called: 2
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _registers
   450  00A6                     _registers:
   451  00A6                     l686:	
   452                           ;incstack = 0
   453                           ; Regs used in _registers: []
   454                           
   455                           
   456                           ;./pins.h: 81:     TRISDbits.TRISD3 = 0;
   457  00A6  1683               	bsf	3,5	;RP0=1, select bank1
   458  00A7  1303               	bcf	3,6	;RP1=0, select bank1
   459  00A8  1188               	bcf	8,3	;volatile
   460                           
   461                           ;./pins.h: 82:     TRISDbits.TRISD2 = 0;
   462  00A9  1108               	bcf	8,2	;volatile
   463                           
   464                           ;./pins.h: 83:     TRISDbits.TRISD1 = 0;
   465  00AA  1088               	bcf	8,1	;volatile
   466                           
   467                           ;./pins.h: 84:     TRISDbits.TRISD0 = 0;
   468  00AB  1008               	bcf	8,0	;volatile
   469  00AC                     l53:
   470  00AC  0008               	return
   471  00AD                     __end_of_registers:
   472                           
   473                           	psect	text2
   474  0073                     __ptext2:	
   475 ;; *************** function _USART_Init *****************
   476 ;; Defined at:
   477 ;;		line 52 in file "./bluetooth.h"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; Hardware stack levels required when called: 2
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _USART_Init
   507  0073                     _USART_Init:
   508  0073                     l670:	
   509                           ;incstack = 0
   510                           ; Regs used in _USART_Init: [wreg+status,2]
   511                           
   512                           
   513                           ;./bluetooth.h: 53:     TXSTAbits.SYNC = 0;
   514  0073  1683               	bsf	3,5	;RP0=1, select bank1
   515  0074  1303               	bcf	3,6	;RP1=0, select bank1
   516  0075  1218               	bcf	24,4	;volatile
   517                           
   518                           ;./bluetooth.h: 54:     RCSTAbits.SPEN = 1;
   519  0076  1283               	bcf	3,5	;RP0=0, select bank0
   520  0077  1303               	bcf	3,6	;RP1=0, select bank0
   521  0078  1798               	bsf	24,7	;volatile
   522                           
   523                           ;./bluetooth.h: 55:     TXSTAbits.TXEN = 1;
   524  0079  1683               	bsf	3,5	;RP0=1, select bank1
   525  007A  1303               	bcf	3,6	;RP1=0, select bank1
   526  007B  1698               	bsf	24,5	;volatile
   527                           
   528                           ;./bluetooth.h: 56:     RCSTAbits.CREN = 1;
   529  007C  1283               	bcf	3,5	;RP0=0, select bank0
   530  007D  1303               	bcf	3,6	;RP1=0, select bank0
   531  007E  1618               	bsf	24,4	;volatile
   532                           
   533                           ;./bluetooth.h: 58:     TXSTAbits.BRGH = 1;
   534  007F  1683               	bsf	3,5	;RP0=1, select bank1
   535  0080  1303               	bcf	3,6	;RP1=0, select bank1
   536  0081  1518               	bsf	24,2	;volatile
   537                           
   538                           ;./bluetooth.h: 59:     BAUDCTLbits.BRG16 = 0;
   539  0082  1683               	bsf	3,5	;RP0=1, select bank3
   540  0083  1703               	bsf	3,6	;RP1=1, select bank3
   541  0084  1187               	bcf	7,3	;volatile
   542  0085                     l672:
   543                           
   544                           ;./bluetooth.h: 66:     SPBRGH = 0;
   545  0085  1683               	bsf	3,5	;RP0=1, select bank1
   546  0086  1303               	bcf	3,6	;RP1=0, select bank1
   547  0087  019A               	clrf	26	;volatile
   548  0088                     l674:
   549                           
   550                           ;./bluetooth.h: 67:     SPBRG = 129;
   551  0088  3081               	movlw	129
   552  0089  0099               	movwf	25	;volatile
   553  008A                     l676:
   554                           
   555                           ;./bluetooth.h: 73:     PIE1bits.RCIE = 1;
   556  008A  168C               	bsf	12,5	;volatile
   557  008B                     l678:
   558                           
   559                           ;./bluetooth.h: 74:     INTCONbits.PEIE = 1;
   560  008B  170B               	bsf	11,6	;volatile
   561  008C                     l680:
   562                           
   563                           ;./bluetooth.h: 75:     INTCONbits.GIE = 1;
   564  008C  178B               	bsf	11,7	;volatile
   565  008D                     l41:
   566  008D  0008               	return
   567  008E                     __end_of_USART_Init:
   568                           
   569                           	psect	text3
   570  00AD                     __ptext3:	
   571 ;; *************** function _LED_set_off *****************
   572 ;; Defined at:
   573 ;;		line 88 in file "./pins.h"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		None
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0
   590 ;;      Totals:         0       0       0       0       0
   591 ;;Total ram usage:        0 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; Hardware stack levels required when called: 2
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           
   602                           ;psect for function _LED_set_off
   603  00AD                     _LED_set_off:
   604  00AD                     l688:	
   605                           ;incstack = 0
   606                           ; Regs used in _LED_set_off: []
   607                           
   608                           
   609                           ;./pins.h: 89:     RD3 = RD2 = RD1 = RD0 = 0;
   610  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   611  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   612  00AF  1008               	bcf	8,0	;volatile
   613  00B0  1088               	bcf	8,1	;volatile
   614  00B1  1108               	bcf	8,2	;volatile
   615  00B2  1188               	bcf	8,3	;volatile
   616  00B3                     l56:
   617  00B3  0008               	return
   618  00B4                     __end_of_LED_set_off:
   619                           
   620                           	psect	text4
   621  001D                     __ptext4:	
   622 ;; *************** function _isr *****************
   623 ;; Defined at:
   624 ;;		line 43 in file "newmain.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          3       0       0       0       0
   641 ;;      Totals:         3       0       0       0       0
   642 ;;Total ram usage:        3 bytes
   643 ;; Hardware stack levels used: 1
   644 ;; Hardware stack levels required when called: 1
   645 ;; This function calls:
   646 ;;		_UART_GET
   647 ;;		_UART_WRITE
   648 ;; This function is called by:
   649 ;;		Interrupt level 1
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _isr
   655  001D                     _isr:
   656  001D                     i1l690:
   657                           
   658                           ;newmain.c: 48:     if(RCIF) {
   659  001D  1283               	bcf	3,5	;RP0=0, select bank0
   660  001E  1303               	bcf	3,6	;RP1=0, select bank0
   661  001F  1E8C               	btfss	12,5	;volatile
   662  0020  2822               	goto	u2_21
   663  0021  2823               	goto	u2_20
   664  0022                     u2_21:
   665  0022  2839               	goto	i1l700
   666  0023                     u2_20:
   667  0023                     i1l692:
   668                           
   669                           ;newmain.c: 49:         ferr = FERR;
   670  0023  3000               	movlw	0
   671  0024  1918               	btfsc	24,2	;volatile
   672  0025  3001               	movlw	1
   673  0026  00F9               	movwf	_ferr
   674  0027                     i1l694:
   675                           
   676                           ;newmain.c: 50:         if(OERR) {
   677  0027  1C98               	btfss	24,1	;volatile
   678  0028  282A               	goto	u3_21
   679  0029  282B               	goto	u3_20
   680  002A                     u3_21:
   681  002A  282D               	goto	i1l698
   682  002B                     u3_20:
   683  002B                     i1l696:
   684                           
   685                           ;newmain.c: 51:             RCSTAbits.CREN = 0;
   686  002B  1218               	bcf	24,4	;volatile
   687                           
   688                           ;newmain.c: 52:             RCSTAbits.CREN = 1;
   689  002C  1618               	bsf	24,4	;volatile
   690  002D                     i1l698:
   691                           
   692                           ;newmain.c: 55:         UART_GET(&data);
   693  002D  307A               	movlw	(low (_data| 0))& (0+255)
   694  002E  120A  118A  209C  120A  118A  	fcall	_UART_GET
   695                           
   696                           ;newmain.c: 56:         UART_WRITE(&data);
   697  0033  307A               	movlw	(low (_data| 0))& (0+255)
   698  0034  120A  118A  208E  120A  118A  	fcall	_UART_WRITE
   699  0039                     i1l700:
   700                           
   701                           ;newmain.c: 59:     if (data == 'A') {
   702  0039  3041               	movlw	65
   703  003A  067A               	xorwf	_data,w
   704  003B  1D03               	btfss	3,2
   705  003C  283E               	goto	u4_21
   706  003D  283F               	goto	u4_20
   707  003E                     u4_21:
   708  003E  2843               	goto	i1l70
   709  003F                     u4_20:
   710  003F                     i1l702:
   711                           
   712                           ;newmain.c: 60:         RD0 = !RD0;
   713  003F  3001               	movlw	1
   714  0040  1283               	bcf	3,5	;RP0=0, select bank0
   715  0041  1303               	bcf	3,6	;RP1=0, select bank0
   716  0042  0688               	xorwf	8,f
   717  0043                     i1l70:
   718  0043  0874               	movf	??_isr+2,w
   719  0044  008A               	movwf	10
   720  0045  0873               	movf	??_isr+1,w
   721  0046  0084               	movwf	4
   722  0047  0E72               	swapf	??_isr,w
   723  0048  0083               	movwf	3
   724  0049  0EFE               	swapf	btemp,f
   725  004A  0E7E               	swapf	btemp,w
   726  004B  0009               	retfie
   727  004C                     __end_of_isr:
   728                           
   729                           	psect	intentry
   730  0004                     __pintentry:	
   731                           ;incstack = 0
   732                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   733                           
   734  0004                     interrupt_function:
   735  007E                     saved_w	set	btemp
   736  0004  00FE               	movwf	btemp
   737  0005  0E03               	swapf	3,w
   738  0006  00F2               	movwf	??_isr
   739  0007  0804               	movf	4,w
   740  0008  00F3               	movwf	??_isr+1
   741  0009  080A               	movf	10,w
   742  000A  00F4               	movwf	??_isr+2
   743  000B  120A  118A  281D   	ljmp	_isr
   744                           
   745                           	psect	text5
   746  008E                     __ptext5:	
   747 ;; *************** function _UART_WRITE *****************
   748 ;; Defined at:
   749 ;;		line 78 in file "./bluetooth.h"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  send            1    wreg     PTR unsigned char 
   752 ;;		 -> data(1), 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  send            1    0[COMMON] PTR unsigned char 
   755 ;;		 -> data(1), 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr0l, fsr0h
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         1       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         1       0       0       0       0
   769 ;;Total ram usage:        1 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_isr
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           
   779                           ;psect for function _UART_WRITE
   780  008E                     _UART_WRITE:
   781                           
   782                           ;incstack = 0
   783                           ; Regs used in _UART_WRITE: [wregfsr0]
   784                           ;UART_WRITE@send stored from wreg
   785  008E  00F0               	movwf	UART_WRITE@send
   786  008F                     i1l682:
   787                           
   788                           ;./bluetooth.h: 79:     TXREG = *send;
   789  008F  0870               	movf	UART_WRITE@send,w
   790  0090  0084               	movwf	4
   791  0091  0800               	movf	0,w
   792  0092  1283               	bcf	3,5	;RP0=0, select bank0
   793  0093  1303               	bcf	3,6	;RP1=0, select bank0
   794  0094  0099               	movwf	25	;volatile
   795  0095                     i1l44:	
   796                           ;./bluetooth.h: 80:     while(!TXSTAbits.TRMT);
   797                           
   798  0095  1683               	bsf	3,5	;RP0=1, select bank1
   799  0096  1303               	bcf	3,6	;RP1=0, select bank1
   800  0097  1C98               	btfss	24,1	;volatile
   801  0098  289A               	goto	u1_21
   802  0099  289B               	goto	u1_20
   803  009A                     u1_21:
   804  009A  2895               	goto	i1l44
   805  009B                     u1_20:
   806  009B                     i1l47:
   807  009B  0008               	return
   808  009C                     __end_of_UART_WRITE:
   809                           
   810                           	psect	text6
   811  009C                     __ptext6:	
   812 ;; *************** function _UART_GET *****************
   813 ;; Defined at:
   814 ;;		line 83 in file "./bluetooth.h"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  value           1    wreg     PTR unsigned char 
   817 ;;		 -> data(1), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  value           1    1[COMMON] PTR unsigned char 
   820 ;;		 -> data(1), 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         1       0       0       0       0
   832 ;;      Temps:          1       0       0       0       0
   833 ;;      Totals:         2       0       0       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_isr
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _UART_GET
   845  009C                     _UART_GET:
   846                           
   847                           ;incstack = 0
   848                           ; Regs used in _UART_GET: [wregfsr0]
   849                           ;UART_GET@value stored from wreg
   850  009C  00F1               	movwf	UART_GET@value
   851  009D                     i1l684:
   852                           
   853                           ;./bluetooth.h: 84:     *value = RCREG;
   854  009D  1283               	bcf	3,5	;RP0=0, select bank0
   855  009E  1303               	bcf	3,6	;RP1=0, select bank0
   856  009F  081A               	movf	26,w	;volatile
   857  00A0  00F0               	movwf	??_UART_GET
   858  00A1  0871               	movf	UART_GET@value,w
   859  00A2  0084               	movwf	4
   860  00A3  0870               	movf	??_UART_GET,w
   861  00A4  0080               	movwf	0
   862  00A5                     i1l50:
   863  00A5  0008               	return
   864  00A6                     __end_of_UART_GET:
   865  007E                     btemp	set	126	;btemp
   866  007E                     wtemp0	set	126
   867                           
   868                           	psect	config
   869                           
   870                           ;Config register CONFIG1 @ 0x2007
   871                           ;	Oscillator Selection bits
   872                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   873                           ;	Watchdog Timer Enable bit
   874                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   875                           ;	Power-up Timer Enable bit
   876                           ;	PWRTE = ON, PWRT enabled
   877                           ;	RE3/MCLR pin function select bit
   878                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   879                           ;	Code Protection bit
   880                           ;	CP = OFF, Program memory code protection is disabled
   881                           ;	Data Code Protection bit
   882                           ;	CPD = OFF, Data memory code protection is disabled
   883                           ;	Brown Out Reset Selection bits
   884                           ;	BOREN = ON, BOR enabled
   885                           ;	Internal External Switchover bit
   886                           ;	IESO = ON, Internal/External Switchover mode is enabled
   887                           ;	Fail-Safe Clock Monitor Enabled bit
   888                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   889                           ;	Low Voltage Programming Enable bit
   890                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   891                           ;	In-Circuit Debugger Mode bit
   892                           ;	DEBUG = 0x1, unprogrammed default
   893  2007                     	org	8199
   894  2007  2FE2               	dw	12258
   895                           
   896                           ;Config register CONFIG2 @ 0x2008
   897                           ;	Brown-out Reset Selection bit
   898                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
   899                           ;	Flash Program Memory Self Write Enable bits
   900                           ;	WRT = OFF, Write protection off
   901  2008                     	org	8200
   902  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_GET@value	PTR unsigned char  size(1) Largest target is 1
		 -> data(COMMON[1]), 

    UART_WRITE@send	PTR unsigned char  size(1) Largest target is 1
		 -> data(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_UART_GET

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              5 COMMON     3     3      0
                        _LED_set_off
                         _USART_Init
                          _registers
 ---------------------------------------------------------------------------------
 (1) _registers                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_set_off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      90
                                              2 COMMON     3     3      0
                           _UART_GET
                         _UART_WRITE
 ---------------------------------------------------------------------------------
 (3) _UART_WRITE                                           1     1      0      45
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _UART_GET                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_set_off
   _USART_Init
   _registers

 _isr (ROOT)
   _UART_GET
   _UART_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jan 02 16:13:10 2022

                     l41 008D                       l53 00AC                       l56 00B3  
                     l75 006F                       l76 006F                       u57 0065  
                    l710 006C                      l704 004C                      l706 0050  
                    l708 005A                      l670 0073                      l680 008C  
                    l672 0085                      l674 0088                      l676 008A  
                    l678 008B                      l686 00A6                      l688 00AD  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _isr 001D                      fsr0 0004  
                    indf 0000                     ?_isr 0070                     _FERR 00C2  
                   i1l50 00A5                     i1l44 0095                     _RCIF 0065  
                   i1l70 0043                     i1l47 009B                     _OERR 00C1  
                   u1_20 009B                     u1_21 009A                     u2_20 0023  
                   u2_21 0022                     u3_20 002B                     u3_21 002A  
                   u4_20 003F                     u4_21 003E                     _data 007A  
                   _ferr 0079                     _main 004C                     btemp 007E  
                   start 000E             ?_LED_set_off 0070                    ??_isr 0072  
                  ?_main 0070                    i1l700 0039                    i1l702 003F  
                  i1l682 008F                    i1l690 001D                    i1l684 009D  
                  i1l692 0023                    i1l694 0027                    i1l696 002B  
                  i1l698 002D                    _RCREG 001A              ?_UART_WRITE 0070  
                  _SPBRG 0099                    _TXREG 0019         __end_of_UART_GET 00A6  
                  _value 0078                    pclath 000A                    status 0003  
                  wtemp0 007E              ?_USART_Init 0070          __initialization 0011  
           __end_of_main 0073                   ??_main 0075                   _SPBRGH 009A  
    __size_of_UART_WRITE 000E             __pdataCOMMON 007A                   saved_w 007E  
    __size_of_USART_Init 001B           UART_WRITE@send 0070  __end_of__initialization 0019  
         __pcstackCOMMON 0070                ?_UART_GET 0070     __size_of_LED_set_off 0007  
             __pmaintext 004C               ??_UART_GET 0070               __pintentry 0004  
     __size_of_registers 0007             ??_UART_WRITE 0070             ??_USART_Init 0075  
     __end_of_UART_WRITE 009C                  __ptext1 00A6                  __ptext2 0073  
                __ptext3 00AD                  __ptext4 001D                  __ptext5 008E  
                __ptext6 009C             __size_of_isr 002F       __end_of_USART_Init 008E  
   end_of_initialization 0019        __end_of_registers 00AD                _RCSTAbits 0018  
              _TRISDbits 0088                _TXSTAbits 0098            UART_GET@value 0071  
      __size_of_UART_GET 000A            __pidataCOMMON 00B4              _BAUDCTLbits 0187  
    start_initialization 0011              __end_of_isr 004C            ??_LED_set_off 0075  
            __pbssCOMMON 0078                ___latbits 0002      __end_of_LED_set_off 00B4  
      interrupt_function 0004                _registers 00A6                 _PIE1bits 008C  
               _UART_GET 009C               ?_registers 0070              _LED_set_off 00AD  
          __size_of_main 0027               _INTCONbits 000B                 intlevel1 0000  
            ??_registers 0075               _OSCCONbits 008F               _UART_WRITE 008E  
             _USART_Init 0073  
