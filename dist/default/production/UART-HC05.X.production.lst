

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 03 04:03:09 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataCOMMON
   212  00E3                     __pidataCOMMON:
   213                           
   214                           ;initializer for _data
   215  00E3  3454               	retlw	84
   216  0001                     _TMR0	set	1
   217  001A                     _RCREG	set	26
   218  0019                     _TXREG	set	25
   219  000B                     _INTCONbits	set	11
   220  0018                     _RCSTAbits	set	24
   221  005A                     _T0IF	set	90
   222  00C1                     _OERR	set	193
   223  00C2                     _FERR	set	194
   224  0065                     _RCIF	set	101
   225  0040                     _RD0	set	64
   226  0041                     _RD1	set	65
   227  0042                     _RD2	set	66
   228  0043                     _RD3	set	67
   229  0081                     _OPTION_REGbits	set	129
   230  008F                     _OSCCONbits	set	143
   231  0088                     _TRISDbits	set	136
   232  008C                     _PIE1bits	set	140
   233  0099                     _SPBRG	set	153
   234  009A                     _SPBRGH	set	154
   235  0098                     _TXSTAbits	set	152
   236  0187                     _BAUDCTLbits	set	391
   237                           
   238                           	psect	cinit
   239  0011                     start_initialization:	
   240                           ; #config settings
   241                           
   242  0011                     __initialization:
   243                           
   244                           ; Initialize objects allocated to COMMON
   245  0011  120A  118A  20E3  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   246  0016  00FB               	movwf	__pdataCOMMON& (0+127)
   247                           
   248                           ; Clear objects allocated to COMMON
   249  0017  01F8               	clrf	__pbssCOMMON& (0+127)
   250  0018  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   251  0019  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   252  001A                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  001A                     __end_of__initialization:
   256  001A  0183               	clrf	3
   257  001B  120A  118A  286D   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  0078                     __pbssCOMMON:
   261  0078                     _ms:
   262  0078                     	ds	2
   263  007A                     _ferr:
   264  007A                     	ds	1
   265                           
   266                           	psect	dataCOMMON
   267  007B                     __pdataCOMMON:
   268  007B                     _data:
   269  007B                     	ds	1
   270                           
   271                           	psect	cstackCOMMON
   272  0070                     __pcstackCOMMON:
   273  0070                     ?_USART_Init:
   274  0070                     ?_UART_WRITE:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ??_UART_WRITE:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_UART_GET:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ??_UART_GET:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_registers:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_LED_set_off:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_isr:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_main:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     UART_WRITE@send:	
   299                           ; 1 bytes @ 0x0
   300                           
   301                           
   302                           ; 1 bytes @ 0x0
   303  0070                     	ds	1
   304  0071                     UART_GET@value:
   305                           
   306                           ; 1 bytes @ 0x1
   307  0071                     	ds	1
   308  0072                     ??_isr:
   309                           
   310                           ; 1 bytes @ 0x2
   311  0072                     	ds	3
   312  0075                     ??_USART_Init:
   313  0075                     ??_registers:	
   314                           ; 1 bytes @ 0x5
   315                           
   316  0075                     ??_LED_set_off:	
   317                           ; 1 bytes @ 0x5
   318                           
   319  0075                     ??_main:	
   320                           ; 1 bytes @ 0x5
   321                           
   322                           
   323                           ; 1 bytes @ 0x5
   324  0075                     	ds	3
   325                           
   326                           	psect	maintext
   327  006D                     __pmaintext:	
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 77 in file "newmain.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, pclath, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : B00/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   347 ;;      Params:         0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0
   349 ;;      Temps:          3       0       0       0       0
   350 ;;      Totals:         3       0       0       0       0
   351 ;;Total ram usage:        3 bytes
   352 ;; Hardware stack levels required when called: 3
   353 ;; This function calls:
   354 ;;		_LED_set_off
   355 ;;		_USART_Init
   356 ;;		_registers
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           
   363                           ;psect for function _main
   364  006D                     _main:
   365  006D                     l728:	
   366                           ;incstack = 0
   367                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   368                           
   369                           
   370                           ;newmain.c: 78:     OSCCONbits.SCS = 0;
   371  006D  1683               	bsf	3,5	;RP0=1, select bank1
   372  006E  1303               	bcf	3,6	;RP1=0, select bank1
   373  006F  100F               	bcf	15,0	;volatile
   374                           
   375                           ;newmain.c: 79:     OSCCONbits.OSTS = 1;
   376  0070  158F               	bsf	15,3	;volatile
   377  0071                     l730:
   378                           
   379                           ;newmain.c: 81:     registers();
   380  0071  120A  118A  20D5  120A  118A  	fcall	_registers
   381                           
   382                           ;newmain.c: 82:     LED_set_off();
   383  0076  120A  118A  20DC  120A  118A  	fcall	_LED_set_off
   384  007B                     l732:
   385                           
   386                           ;newmain.c: 83:     USART_Init();
   387  007B  120A  118A  20A2  120A  118A  	fcall	_USART_Init
   388                           
   389                           ;newmain.c: 89:     _delay((unsigned long)((2000)*(20000000/4000.0)));
   390  0080  3033               	movlw	51
   391  0081  00F7               	movwf	??_main+2
   392  0082  30BB               	movlw	187
   393  0083  00F6               	movwf	??_main+1
   394  0084  30DF               	movlw	223
   395  0085  00F5               	movwf	??_main
   396  0086                     u77:
   397  0086  0BF5               	decfsz	??_main,f
   398  0087  2886               	goto	u77
   399  0088  0BF6               	decfsz	??_main+1,f
   400  0089  2886               	goto	u77
   401  008A  0BF7               	decfsz	??_main+2,f
   402  008B  2886               	goto	u77
   403  008C  288D               	nop2
   404                           
   405                           ;newmain.c: 94:     TMR0 = 100;
   406  008D  3064               	movlw	100
   407  008E  1283               	bcf	3,5	;RP0=0, select bank0
   408  008F  1303               	bcf	3,6	;RP1=0, select bank0
   409  0090  0081               	movwf	1	;volatile
   410  0091                     l734:
   411                           
   412                           ;newmain.c: 96:     OPTION_REGbits.T0CS = 0;
   413  0091  1683               	bsf	3,5	;RP0=1, select bank1
   414  0092  1303               	bcf	3,6	;RP1=0, select bank1
   415  0093  1281               	bcf	1,5	;volatile
   416  0094                     l736:
   417                           
   418                           ;newmain.c: 97:     OPTION_REGbits.PSA = 0;
   419  0094  1181               	bcf	1,3	;volatile
   420  0095                     l738:
   421                           
   422                           ;newmain.c: 98:     OPTION_REGbits.PS = 0b100;
   423  0095  0801               	movf	1,w	;volatile
   424  0096  39F8               	andlw	-8
   425  0097  3804               	iorlw	4
   426  0098  0081               	movwf	1	;volatile
   427  0099                     l740:
   428                           
   429                           ;newmain.c: 99:     INTCONbits.T0IE = 1;
   430  0099  168B               	bsf	11,5	;volatile
   431  009A                     l742:
   432                           
   433                           ;newmain.c: 100:     INTCONbits.T0IF = 0;
   434  009A  110B               	bcf	11,2	;volatile
   435  009B                     l744:
   436                           
   437                           ;newmain.c: 102:     RD3=1;
   438  009B  1283               	bcf	3,5	;RP0=0, select bank0
   439  009C  1303               	bcf	3,6	;RP1=0, select bank0
   440  009D  1588               	bsf	8,3	;volatile
   441  009E                     l83:	
   442                           ;newmain.c: 104:     while(1) {
   443                           
   444  009E                     l84:	
   445                           ;newmain.c: 122:     }
   446                           
   447  009E  289E               	goto	l83
   448  009F  120A  118A  280E   	ljmp	start
   449  00A2                     __end_of_main:
   450                           
   451                           	psect	text1
   452  00D5                     __ptext1:	
   453 ;; *************** function _registers *****************
   454 ;; Defined at:
   455 ;;		line 80 in file "./pins.h"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		None
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   469 ;;      Params:         0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0
   472 ;;      Totals:         0       0       0       0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels used: 1
   475 ;; Hardware stack levels required when called: 2
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           
   484                           ;psect for function _registers
   485  00D5                     _registers:
   486  00D5                     l694:	
   487                           ;incstack = 0
   488                           ; Regs used in _registers: []
   489                           
   490                           
   491                           ;./pins.h: 81:     TRISDbits.TRISD3 = 0;
   492  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   493  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   494  00D7  1188               	bcf	8,3	;volatile
   495                           
   496                           ;./pins.h: 82:     TRISDbits.TRISD2 = 0;
   497  00D8  1108               	bcf	8,2	;volatile
   498                           
   499                           ;./pins.h: 83:     TRISDbits.TRISD1 = 0;
   500  00D9  1088               	bcf	8,1	;volatile
   501                           
   502                           ;./pins.h: 84:     TRISDbits.TRISD0 = 0;
   503  00DA  1008               	bcf	8,0	;volatile
   504  00DB                     l59:
   505  00DB  0008               	return
   506  00DC                     __end_of_registers:
   507                           
   508                           	psect	text2
   509  00A2                     __ptext2:	
   510 ;; *************** function _USART_Init *****************
   511 ;; Defined at:
   512 ;;		line 52 in file "./bluetooth.h"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   526 ;;      Params:         0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; Hardware stack levels required when called: 2
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           
   541                           ;psect for function _USART_Init
   542  00A2                     _USART_Init:
   543  00A2                     l678:	
   544                           ;incstack = 0
   545                           ; Regs used in _USART_Init: [wreg+status,2]
   546                           
   547                           
   548                           ;./bluetooth.h: 53:     TXSTAbits.SYNC = 0;
   549  00A2  1683               	bsf	3,5	;RP0=1, select bank1
   550  00A3  1303               	bcf	3,6	;RP1=0, select bank1
   551  00A4  1218               	bcf	24,4	;volatile
   552                           
   553                           ;./bluetooth.h: 54:     RCSTAbits.SPEN = 1;
   554  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   555  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   556  00A7  1798               	bsf	24,7	;volatile
   557                           
   558                           ;./bluetooth.h: 55:     TXSTAbits.TXEN = 1;
   559  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   560  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   561  00AA  1698               	bsf	24,5	;volatile
   562                           
   563                           ;./bluetooth.h: 56:     RCSTAbits.CREN = 1;
   564  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   565  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   566  00AD  1618               	bsf	24,4	;volatile
   567                           
   568                           ;./bluetooth.h: 58:     TXSTAbits.BRGH = 1;
   569  00AE  1683               	bsf	3,5	;RP0=1, select bank1
   570  00AF  1303               	bcf	3,6	;RP1=0, select bank1
   571  00B0  1518               	bsf	24,2	;volatile
   572                           
   573                           ;./bluetooth.h: 59:     BAUDCTLbits.BRG16 = 0;
   574  00B1  1683               	bsf	3,5	;RP0=1, select bank3
   575  00B2  1703               	bsf	3,6	;RP1=1, select bank3
   576  00B3  1187               	bcf	7,3	;volatile
   577  00B4                     l680:
   578                           
   579                           ;./bluetooth.h: 66:     SPBRGH = 0;
   580  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   581  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   582  00B6  019A               	clrf	26	;volatile
   583  00B7                     l682:
   584                           
   585                           ;./bluetooth.h: 67:     SPBRG = 129;
   586  00B7  3081               	movlw	129
   587  00B8  0099               	movwf	25	;volatile
   588  00B9                     l684:
   589                           
   590                           ;./bluetooth.h: 73:     PIE1bits.RCIE = 1;
   591  00B9  168C               	bsf	12,5	;volatile
   592  00BA                     l686:
   593                           
   594                           ;./bluetooth.h: 74:     INTCONbits.PEIE = 1;
   595  00BA  170B               	bsf	11,6	;volatile
   596  00BB                     l688:
   597                           
   598                           ;./bluetooth.h: 75:     INTCONbits.GIE = 1;
   599  00BB  178B               	bsf	11,7	;volatile
   600  00BC                     l47:
   601  00BC  0008               	return
   602  00BD                     __end_of_USART_Init:
   603                           
   604                           	psect	text3
   605  00DC                     __ptext3:	
   606 ;; *************** function _LED_set_off *****************
   607 ;; Defined at:
   608 ;;		line 88 in file "./pins.h"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		None
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 2
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _LED_set_off
   638  00DC                     _LED_set_off:
   639  00DC                     l696:	
   640                           ;incstack = 0
   641                           ; Regs used in _LED_set_off: []
   642                           
   643                           
   644                           ;./pins.h: 89:     RD3 = RD2 = RD1 = RD0 = 0;
   645  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   646  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   647  00DE  1008               	bcf	8,0	;volatile
   648  00DF  1088               	bcf	8,1	;volatile
   649  00E0  1108               	bcf	8,2	;volatile
   650  00E1  1188               	bcf	8,3	;volatile
   651  00E2                     l62:
   652  00E2  0008               	return
   653  00E3                     __end_of_LED_set_off:
   654                           
   655                           	psect	text4
   656  001E                     __ptext4:	
   657 ;; *************** function _isr *****************
   658 ;; Defined at:
   659 ;;		line 43 in file "newmain.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          3       0       0       0       0
   676 ;;      Totals:         3       0       0       0       0
   677 ;;Total ram usage:        3 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; Hardware stack levels required when called: 1
   680 ;; This function calls:
   681 ;;		_UART_GET
   682 ;;		_UART_WRITE
   683 ;; This function is called by:
   684 ;;		Interrupt level 1
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _isr
   690  001E                     _isr:
   691  001E                     i1l698:
   692                           
   693                           ;newmain.c: 48:     if(RCIF) {
   694  001E  1283               	bcf	3,5	;RP0=0, select bank0
   695  001F  1303               	bcf	3,6	;RP1=0, select bank0
   696  0020  1E8C               	btfss	12,5	;volatile
   697  0021  2823               	goto	u2_21
   698  0022  2824               	goto	u2_20
   699  0023                     u2_21:
   700  0023  283A               	goto	i1l708
   701  0024                     u2_20:
   702  0024                     i1l700:
   703                           
   704                           ;newmain.c: 49:         ferr = FERR;
   705  0024  3000               	movlw	0
   706  0025  1918               	btfsc	24,2	;volatile
   707  0026  3001               	movlw	1
   708  0027  00FA               	movwf	_ferr
   709  0028                     i1l702:
   710                           
   711                           ;newmain.c: 50:         if(OERR) {
   712  0028  1C98               	btfss	24,1	;volatile
   713  0029  282B               	goto	u3_21
   714  002A  282C               	goto	u3_20
   715  002B                     u3_21:
   716  002B  282E               	goto	i1l706
   717  002C                     u3_20:
   718  002C                     i1l704:
   719                           
   720                           ;newmain.c: 51:             RCSTAbits.CREN = 0;
   721  002C  1218               	bcf	24,4	;volatile
   722                           
   723                           ;newmain.c: 52:             RCSTAbits.CREN = 1;
   724  002D  1618               	bsf	24,4	;volatile
   725  002E                     i1l706:
   726                           
   727                           ;newmain.c: 55:         UART_GET(&data);
   728  002E  307B               	movlw	(low (_data| 0))& (0+255)
   729  002F  120A  118A  20CB  120A  118A  	fcall	_UART_GET
   730                           
   731                           ;newmain.c: 56:         UART_WRITE(&data);
   732  0034  307B               	movlw	(low (_data| 0))& (0+255)
   733  0035  120A  118A  20BD  120A  118A  	fcall	_UART_WRITE
   734  003A                     i1l708:
   735                           
   736                           ;newmain.c: 59:     if (data == 'A') {
   737  003A  3041               	movlw	65
   738  003B  067B               	xorwf	_data,w
   739  003C  1D03               	btfss	3,2
   740  003D  283F               	goto	u4_21
   741  003E  2840               	goto	u4_20
   742  003F                     u4_21:
   743  003F  2844               	goto	i1l712
   744  0040                     u4_20:
   745  0040                     i1l710:
   746                           
   747                           ;newmain.c: 60:         RD0 = !RD0;
   748  0040  3001               	movlw	1
   749  0041  1283               	bcf	3,5	;RP0=0, select bank0
   750  0042  1303               	bcf	3,6	;RP1=0, select bank0
   751  0043  0688               	xorwf	8,f
   752  0044                     i1l712:
   753                           
   754                           ;newmain.c: 64:     if(T0IF) {
   755  0044  1D0B               	btfss	11,2	;volatile
   756  0045  2847               	goto	u5_21
   757  0046  2848               	goto	u5_20
   758  0047                     u5_21:
   759  0047  2864               	goto	i1l78
   760  0048                     u5_20:
   761  0048                     i1l714:
   762                           
   763                           ;newmain.c: 65:         if(ms == 1000) {
   764  0048  30E8               	movlw	232
   765  0049  0678               	xorwf	_ms,w
   766  004A  3003               	movlw	3
   767  004B  1903               	skipnz
   768  004C  0679               	xorwf	_ms+1,w
   769  004D  1D03               	btfss	3,2
   770  004E  2850               	goto	u6_21
   771  004F  2851               	goto	u6_20
   772  0050                     u6_21:
   773  0050  2857               	goto	i1l720
   774  0051                     u6_20:
   775  0051                     i1l716:
   776                           
   777                           ;newmain.c: 66:             RD2 = !RD2;
   778  0051  3004               	movlw	4
   779  0052  1283               	bcf	3,5	;RP0=0, select bank0
   780  0053  1303               	bcf	3,6	;RP1=0, select bank0
   781  0054  0688               	xorwf	8,f
   782  0055                     i1l718:
   783                           
   784                           ;newmain.c: 67:             ms = 0;
   785  0055  01F8               	clrf	_ms
   786  0056  01F9               	clrf	_ms+1
   787  0057                     i1l720:
   788                           
   789                           ;newmain.c: 70:         RD1 = !RD1;
   790  0057  3002               	movlw	2
   791  0058  1283               	bcf	3,5	;RP0=0, select bank0
   792  0059  1303               	bcf	3,6	;RP1=0, select bank0
   793  005A  0688               	xorwf	8,f
   794  005B                     i1l722:
   795                           
   796                           ;newmain.c: 71:         TMR0 = 100;
   797  005B  3064               	movlw	100
   798  005C  0081               	movwf	1	;volatile
   799  005D                     i1l724:
   800                           
   801                           ;newmain.c: 72:         INTCONbits.T0IF = 0;
   802  005D  110B               	bcf	11,2	;volatile
   803  005E                     i1l726:
   804                           
   805                           ;newmain.c: 73:         ms++;
   806  005E  3001               	movlw	1
   807  005F  07F8               	addwf	_ms,f
   808  0060  1803               	skipnc
   809  0061  0AF9               	incf	_ms+1,f
   810  0062  3000               	movlw	0
   811  0063  07F9               	addwf	_ms+1,f
   812  0064                     i1l78:
   813  0064  0874               	movf	??_isr+2,w
   814  0065  008A               	movwf	10
   815  0066  0873               	movf	??_isr+1,w
   816  0067  0084               	movwf	4
   817  0068  0E72               	swapf	??_isr,w
   818  0069  0083               	movwf	3
   819  006A  0EFE               	swapf	btemp,f
   820  006B  0E7E               	swapf	btemp,w
   821  006C  0009               	retfie
   822  006D                     __end_of_isr:
   823                           
   824                           	psect	intentry
   825  0004                     __pintentry:	
   826                           ;incstack = 0
   827                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   828                           
   829  0004                     interrupt_function:
   830  007E                     saved_w	set	btemp
   831  0004  00FE               	movwf	btemp
   832  0005  0E03               	swapf	3,w
   833  0006  00F2               	movwf	??_isr
   834  0007  0804               	movf	4,w
   835  0008  00F3               	movwf	??_isr+1
   836  0009  080A               	movf	10,w
   837  000A  00F4               	movwf	??_isr+2
   838  000B  120A  118A  281E   	ljmp	_isr
   839                           
   840                           	psect	text5
   841  00BD                     __ptext5:	
   842 ;; *************** function _UART_WRITE *****************
   843 ;; Defined at:
   844 ;;		line 78 in file "./bluetooth.h"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  send            1    wreg     PTR unsigned char 
   847 ;;		 -> data(1), 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  send            1    0[COMMON] PTR unsigned char 
   850 ;;		 -> data(1), 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr0l, fsr0h
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   860 ;;      Params:         0       0       0       0       0
   861 ;;      Locals:         1       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0
   863 ;;      Totals:         1       0       0       0       0
   864 ;;Total ram usage:        1 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_isr
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _UART_WRITE
   875  00BD                     _UART_WRITE:
   876                           
   877                           ;incstack = 0
   878                           ; Regs used in _UART_WRITE: [wregfsr0]
   879                           ;UART_WRITE@send stored from wreg
   880  00BD  00F0               	movwf	UART_WRITE@send
   881  00BE                     i1l690:
   882                           
   883                           ;./bluetooth.h: 79:     TXREG = *send;
   884  00BE  0870               	movf	UART_WRITE@send,w
   885  00BF  0084               	movwf	4
   886  00C0  0800               	movf	0,w
   887  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   888  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   889  00C3  0099               	movwf	25	;volatile
   890  00C4                     i1l50:	
   891                           ;./bluetooth.h: 80:     while(!TXSTAbits.TRMT);
   892                           
   893  00C4  1683               	bsf	3,5	;RP0=1, select bank1
   894  00C5  1303               	bcf	3,6	;RP1=0, select bank1
   895  00C6  1C98               	btfss	24,1	;volatile
   896  00C7  28C9               	goto	u1_21
   897  00C8  28CA               	goto	u1_20
   898  00C9                     u1_21:
   899  00C9  28C4               	goto	i1l50
   900  00CA                     u1_20:
   901  00CA                     i1l53:
   902  00CA  0008               	return
   903  00CB                     __end_of_UART_WRITE:
   904                           
   905                           	psect	text6
   906  00CB                     __ptext6:	
   907 ;; *************** function _UART_GET *****************
   908 ;; Defined at:
   909 ;;		line 92 in file "./bluetooth.h"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  value           1    wreg     PTR unsigned char 
   912 ;;		 -> data(1), 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  value           1    1[COMMON] PTR unsigned char 
   915 ;;		 -> data(1), 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         1       0       0       0       0
   927 ;;      Temps:          1       0       0       0       0
   928 ;;      Totals:         2       0       0       0       0
   929 ;;Total ram usage:        2 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_isr
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _UART_GET
   940  00CB                     _UART_GET:
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _UART_GET: [wregfsr0]
   944                           ;UART_GET@value stored from wreg
   945  00CB  00F1               	movwf	UART_GET@value
   946  00CC                     i1l692:
   947                           
   948                           ;./bluetooth.h: 93:     *value = RCREG;
   949  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   950  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   951  00CE  081A               	movf	26,w	;volatile
   952  00CF  00F0               	movwf	??_UART_GET
   953  00D0  0871               	movf	UART_GET@value,w
   954  00D1  0084               	movwf	4
   955  00D2  0870               	movf	??_UART_GET,w
   956  00D3  0080               	movwf	0
   957  00D4                     i1l56:
   958  00D4  0008               	return
   959  00D5                     __end_of_UART_GET:
   960  007E                     btemp	set	126	;btemp
   961  007E                     wtemp0	set	126
   962                           
   963                           	psect	config
   964                           
   965                           ;Config register CONFIG1 @ 0x2007
   966                           ;	Oscillator Selection bits
   967                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   968                           ;	Watchdog Timer Enable bit
   969                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   970                           ;	Power-up Timer Enable bit
   971                           ;	PWRTE = ON, PWRT enabled
   972                           ;	RE3/MCLR pin function select bit
   973                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   974                           ;	Code Protection bit
   975                           ;	CP = OFF, Program memory code protection is disabled
   976                           ;	Data Code Protection bit
   977                           ;	CPD = OFF, Data memory code protection is disabled
   978                           ;	Brown Out Reset Selection bits
   979                           ;	BOREN = ON, BOR enabled
   980                           ;	Internal External Switchover bit
   981                           ;	IESO = ON, Internal/External Switchover mode is enabled
   982                           ;	Fail-Safe Clock Monitor Enabled bit
   983                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   984                           ;	Low Voltage Programming Enable bit
   985                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   986                           ;	In-Circuit Debugger Mode bit
   987                           ;	DEBUG = 0x1, unprogrammed default
   988  2007                     	org	8199
   989  2007  2FE2               	dw	12258
   990                           
   991                           ;Config register CONFIG2 @ 0x2008
   992                           ;	Brown-out Reset Selection bit
   993                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
   994                           ;	Flash Program Memory Self Write Enable bits
   995                           ;	WRT = OFF, Write protection off
   996  2008                     	org	8200
   997  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_GET@value	PTR unsigned char  size(1) Largest target is 1
		 -> data(COMMON[1]), 

    UART_WRITE@send	PTR unsigned char  size(1) Largest target is 1
		 -> data(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_UART_GET

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              5 COMMON     3     3      0
                        _LED_set_off
                         _USART_Init
                          _registers
 ---------------------------------------------------------------------------------
 (1) _registers                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_set_off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      90
                                              2 COMMON     3     3      0
                           _UART_GET
                         _UART_WRITE
 ---------------------------------------------------------------------------------
 (3) _UART_WRITE                                           1     1      0      45
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _UART_GET                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_set_off
   _USART_Init
   _registers

 _isr (ROOT)
   _UART_GET
   _UART_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 03 04:03:09 2022

                     l62 00E2                       l47 00BC                       l59 00DB  
                     l83 009E                       l84 009E                       u77 0086  
                     _ms 0078                      l730 0071                      l740 0099  
                    l732 007B                      l742 009A                      l734 0091  
                    l680 00B4                      l744 009B                      l736 0094  
                    l728 006D                      l682 00B7                      l738 0095  
                    l684 00B9                      l686 00BA                      l678 00A2  
                    l694 00D5                      l696 00DC                      l688 00BB  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _isr 001E                      fsr0 0004  
                    indf 0000                     ?_isr 0070                     _T0IF 005A  
                   _FERR 00C2                     i1l50 00C4                     _RCIF 0065  
                   i1l53 00CA                     i1l56 00D4                     i1l78 0064  
                   _OERR 00C1                     _TMR0 0001                     u1_20 00CA  
                   u1_21 00C9                     u2_20 0024                     u2_21 0023  
                   u3_20 002C                     u3_21 002B                     u4_20 0040  
                   u4_21 003F                     u5_20 0048                     u5_21 0047  
                   u6_20 0051                     u6_21 0050                     _data 007B  
                   _ferr 007A                     _main 006D                     btemp 007E  
                   start 000E             ?_LED_set_off 0070                    ??_isr 0072  
                  ?_main 0070                    i1l700 0024                    i1l710 0040  
                  i1l702 0028                    i1l720 0057                    i1l712 0044  
                  i1l704 002C                    i1l722 005B                    i1l714 0048  
                  i1l706 002E                    i1l724 005D                    i1l716 0051  
                  i1l708 003A                    i1l726 005E                    i1l718 0055  
                  i1l690 00BE                    i1l692 00CC                    i1l698 001E  
                  _RCREG 001A              ?_UART_WRITE 0070                    _SPBRG 0099  
                  _TXREG 0019         __end_of_UART_GET 00D5                    pclath 000A  
                  status 0003                    wtemp0 007E              ?_USART_Init 0070  
        __initialization 0011             __end_of_main 00A2                   ??_main 0075  
                 _SPBRGH 009A      __size_of_UART_WRITE 000E             __pdataCOMMON 007B  
                 saved_w 007E      __size_of_USART_Init 001B           UART_WRITE@send 0070  
__end_of__initialization 001A           __pcstackCOMMON 0070                ?_UART_GET 0070  
   __size_of_LED_set_off 0007           _OPTION_REGbits 0081               __pmaintext 006D  
             ??_UART_GET 0070               __pintentry 0004       __size_of_registers 0007  
           ??_UART_WRITE 0070             ??_USART_Init 0075       __end_of_UART_WRITE 00CB  
                __ptext1 00D5                  __ptext2 00A2                  __ptext3 00DC  
                __ptext4 001E                  __ptext5 00BD                  __ptext6 00CB  
           __size_of_isr 004F       __end_of_USART_Init 00BD     end_of_initialization 001A  
      __end_of_registers 00DC                _RCSTAbits 0018                _TRISDbits 0088  
              _TXSTAbits 0098            UART_GET@value 0071        __size_of_UART_GET 000A  
          __pidataCOMMON 00E3              _BAUDCTLbits 0187      start_initialization 0011  
            __end_of_isr 006D            ??_LED_set_off 0075              __pbssCOMMON 0078  
              ___latbits 0002      __end_of_LED_set_off 00E3        interrupt_function 0004  
              _registers 00D5                 _PIE1bits 008C                 _UART_GET 00CB  
             ?_registers 0070              _LED_set_off 00DC            __size_of_main 0035  
             _INTCONbits 000B                 intlevel1 0000              ??_registers 0075  
             _OSCCONbits 008F               _UART_WRITE 00BD               _USART_Init 00A2  
